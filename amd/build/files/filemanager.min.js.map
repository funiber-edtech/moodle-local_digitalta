{"version":3,"file":"filemanager.min.js","sources":["../../src/files/filemanager.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport { prepareDraftAreaHTML, uploadFile } from \"local_dta/repositories/files_repository\";\r\nimport Notification from \"core/notification\";\r\n\r\n/**\r\n * Prepare the draft area HTML.\r\n * @param {string} fileArea - The area of the file.\r\n * @param {string} component - The component.\r\n * @param {number} fileContextId - The context id.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const prepareDraftHTML = (fileArea, component, fileContextId) => {\r\n    return prepareDraftAreaHTML({\r\n        filearea: fileArea,\r\n        component: component,\r\n        filecontextid: fileContextId,\r\n    })\r\n    .then((response) => {\r\n        return response;\r\n    })\r\n    .fail(Notification.exception);\r\n};\r\n\r\n/**\r\n * Save files to the server.\r\n * @param {string} containerId - The id of the container.\r\n * @param {string} fileinputId - The id of the file input.\r\n * @param {string} fileid - The id of the file.\r\n * @param {string} filearea - The area of the file.\r\n * @param {number} contextid - The context id.\r\n * @return {Promise} Resolve with warnings.\r\n */\r\nexport const saveFiles = (containerId, fileinputId, fileid, filearea, contextid = 1) => {\r\n    const fileContainer = $(`#${containerId} `);\r\n    const draftid = fileContainer.find(`#${fileinputId}`).attr(\"Value\");\r\n    return uploadFile({\r\n        draftid,\r\n        fileid,\r\n        filearea,\r\n        contextid,\r\n    })\r\n    .then((response) => {\r\n        return response;\r\n    })\r\n    .fail(Notification.exception);\r\n};\r\n\r\n/**\r\n * Initialize the file manager.\r\n * @param {string} containerId - The id of the container.\r\n * @return {void}\r\n */\r\nexport const init = (containerId) => {\r\n    $(`#${containerId}`).html(M.custom.filemanager.html);\r\n};\r\n"],"names":["fileArea","component","fileContextId","filearea","filecontextid","then","response","fail","Notification","exception","containerId","fileinputId","fileid","contextid","fileContainer","draftid","find","attr","html","M","custom","filemanager"],"mappings":"sfAWgC,CAACA,SAAUC,UAAWC,iBAC3C,0CAAqB,CACxBC,SAAUH,SACVC,UAAWA,UACXG,cAAeF,gBAElBG,MAAMC,UACIA,WAEVC,KAAKC,sBAAaC,8BAYE,SAACC,YAAaC,YAAaC,OAAQT,cAAUU,iEAAY,QACxEC,eAAgB,8BAAMJ,kBACtBK,QAAUD,cAAcE,gBAASL,cAAeM,KAAK,gBACpD,gCAAW,CACdF,QAAAA,QACAH,OAAAA,OACAT,SAAAA,SACAU,UAAAA,YAEHR,MAAMC,UACIA,WAEVC,KAAKC,sBAAaC,0BAQFC,6CACXA,cAAeQ,KAAKC,EAAEC,OAAOC,YAAYH"}