{"version":3,"file":"main.min.js","sources":["../../../src/myexperience/view/main.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Notification from \"core/notification\";\r\nimport ModalFactory from 'core/modal_factory';\r\nimport Templates from 'core/templates';\r\nimport {get_string} from 'core/str';\r\nimport {toggleStatus} from 'local_dta/repositories/experience_repository';\r\nimport { displaylinkResourcesModal } from './modals';\r\n\r\n\r\nlet changeStatusModal = null;\r\n\r\n// Selectors\r\nconst SELECTORS = {\r\n    BUTTONS: {\r\n        block: '#block-experience-button',\r\n        unblock: '#open-experience-button',\r\n        confirmBlockModal: '#confirm-block-experience-button',\r\n        addResourceBtn: '#add-resource-button',\r\n    },\r\n    INPUTS: {\r\n        experienceid: '#experience-id',\r\n    }\r\n};\r\n\r\n/**\r\n * Show the delete section modal\r\n * @param {int} experienceid\r\n * @return {void}\r\n */\r\nasync function showChangeStatusModal(experienceid) {\r\n    changeStatusModal = await ModalFactory.create({\r\n        title: get_string(\"experience_view_block_modal_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/experiences/view/open-close-modal', {experienceid}),\r\n    });\r\n    changeStatusModal.show();\r\n}\r\n\r\n/**\r\n * Toggle the status of an experience\r\n * @param {int} experienceid\r\n * @return {void}\r\n */\r\nasync function toggleExperienceStatus(experienceid) {\r\n    try {\r\n        await toggleStatus(experienceid);\r\n        changeStatusModal.hide();\r\n        window.location.reload();\r\n        return;\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n}\r\n\r\n/**\r\n * Set event listeners\r\n * @return {void}\r\n */\r\nfunction setEventListeners() {\r\n    const experienceid = $(SELECTORS.INPUTS.experienceid).val();\r\n\r\n    $(document).on('click', `${SELECTORS.BUTTONS.block}, ${SELECTORS.BUTTONS.unblock}`, () => {\r\n        showChangeStatusModal(experienceid);\r\n    });\r\n\r\n    $(document).on('click', SELECTORS.BUTTONS.confirmBlockModal, () => {\r\n        toggleExperienceStatus(experienceid);\r\n    });\r\n\r\n    $(document).on('click', SELECTORS.BUTTONS.addResourceBtn, () => {\r\n        displaylinkResourcesModal();\r\n    });\r\n\r\n}\r\n\r\nexport const init = () => {\r\n    setEventListeners();\r\n};"],"names":["changeStatusModal","SELECTORS","block","unblock","confirmBlockModal","addResourceBtn","experienceid","setEventListeners","val","document","on","ModalFactory","create","title","body","Templates","render","show","showChangeStatusModal","hide","window","location","reload","error","exception","toggleExperienceStatus"],"mappings":"yoBASIA,kBAAoB,WAGlBC,kBACO,CACLC,MAAO,2BACPC,QAAS,0BACTC,kBAAmB,mCACnBC,eAAgB,wBALlBJ,iBAOM,CACJK,aAAc,2BAqCbC,0BACCD,cAAe,mBAAEL,iBAAiBK,cAAcE,0BAEpDC,UAAUC,GAAG,kBAAYT,kBAAkBC,mBAAUD,kBAAkBE,UAAW,qBA/BnDG,cACjCN,wBAA0BW,uBAAaC,OAAO,CAC1CC,OAAO,mBAAW,oCAAqC,aACvDC,KAAMC,mBAAUC,OAAO,8CAA+C,CAACV,aAAAA,iBAE3EN,kBAAkBiB,OA2BdC,CAAsBZ,qCAGxBG,UAAUC,GAAG,QAAST,kBAAkBG,mBAAmB,qBAtB3BE,wBAExB,uCAAaA,cACnBN,kBAAkBmB,OAClBC,OAAOC,SAASC,SAElB,MAAOC,6BACQC,UAAUD,QAgBvBE,CAAuBnB,qCAGzBG,UAAUC,GAAG,QAAST,kBAAkBI,gBAAgB,8DAM1C,KAChBE"}