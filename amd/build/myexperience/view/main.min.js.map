{"version":3,"file":"main.min.js","sources":["../../../src/myexperience/view/main.js"],"sourcesContent":["import $ from 'jquery';\nimport Notification from \"core/notification\";\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport {get_string} from 'core/str';\nimport {toggleStatus} from 'local_dta/repositories/experience_repository';\n\n\nlet changeStatusModal = null;\n\n// Selectors\nconst SELECTORS = {\n    BUTTONS: {\n        block: '#block-experience-button',\n        unblock: '#open-experience-button',\n        confirmBlockModal: '#confirm-block-experience-button',\n    },\n    INPUTS: {\n        experienceid: '#experience-id',\n    }\n};\n\n/**\n * Show the delete section modal\n * @param {int} experienceid\n * @return {void}\n */\nasync function showChangeStatusModal(experienceid) {\n    changeStatusModal = await ModalFactory.create({\n        title: get_string(\"experience_view_block_modal_title\", \"local_dta\"),\n        body: Templates.render('local_dta/experiences/view/open-close-modal', {experienceid}),\n    });\n    changeStatusModal.show();\n}\n\n/**\n * Toggle the status of an experience\n * @param {int} experienceid\n * @return {void}\n */\nasync function toggleExperienceStatus(experienceid) {\n    try {\n        await toggleStatus(experienceid);\n        changeStatusModal.hide();\n        window.location.reload();\n        return;\n    } catch (error) {\n        Notification.exception(error);\n    }\n}\n\n/**\n * Set event listeners\n * @return {void}\n */\nfunction setEventListeners() {\n    const experienceid = $(SELECTORS.INPUTS.experienceid).val();\n\n    $(document).on('click', `${SELECTORS.BUTTONS.block}, ${SELECTORS.BUTTONS.unblock}`, () => {\n        showChangeStatusModal(experienceid);\n    });\n\n    $(document).on('click', SELECTORS.BUTTONS.confirmBlockModal, () => {\n        toggleExperienceStatus(experienceid);\n    });\n}\n\nexport const init = () => {\n    setEventListeners();\n};"],"names":["changeStatusModal","SELECTORS","block","unblock","confirmBlockModal","experienceid","setEventListeners","val","document","on","ModalFactory","create","title","body","Templates","render","show","showChangeStatusModal","hide","window","location","reload","error","exception","toggleExperienceStatus"],"mappings":"snBAQIA,kBAAoB,WAGlBC,kBACO,CACLC,MAAO,2BACPC,QAAS,0BACTC,kBAAmB,oCAJrBH,iBAMM,CACJI,aAAc,2BAqCbC,0BACCD,cAAe,mBAAEJ,iBAAiBI,cAAcE,0BAEpDC,UAAUC,GAAG,kBAAYR,kBAAkBC,mBAAUD,kBAAkBE,UAAW,qBA/BnDE,cACjCL,wBAA0BU,uBAAaC,OAAO,CAC1CC,OAAO,mBAAW,oCAAqC,aACvDC,KAAMC,mBAAUC,OAAO,8CAA+C,CAACV,aAAAA,iBAE3EL,kBAAkBgB,OA2BdC,CAAsBZ,qCAGxBG,UAAUC,GAAG,QAASR,kBAAkBG,mBAAmB,qBAtB3BC,wBAExB,uCAAaA,cACnBL,kBAAkBkB,OAClBC,OAAOC,SAASC,SAElB,MAAOC,6BACQC,UAAUD,QAgBvBE,CAAuBnB,+BAIX,KAChBC"}