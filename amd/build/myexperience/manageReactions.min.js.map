{"version":3,"file":"manageReactions.min.js","sources":["../../src/myexperience/manageReactions.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport Notification from \"core/notification\";\r\nimport {toogleLikeAndDislike} from \"local_dta/repositories/reactionsRepository\";\r\nimport {SELECTORS} from \"./selectors\";\r\nimport { saveComment } from \"../repositories/reactionsRepository\";\r\n\r\n/**\r\n * Toggle the like and dislike buttons.\r\n * @param {number} experienceid - The id of the experience.\r\n * @param {number} reaction - The reaction to add. 1 for like, 0 for dislike.\r\n */\r\nfunction toggle(experienceid, reaction = null) {\r\n  const reactionSelectors = {\r\n    \"1\": SELECTORS.BUTTONS.likes,\r\n    \"0\": SELECTORS.BUTTONS.dislikes,\r\n  };\r\n  const isActive = $(reactionSelectors[reaction] + SELECTORS.DATA.id(experienceid)).hasClass(\"active\");\r\n  const action = isActive ? null : reaction;\r\n\r\n  toogleLikeAndDislike({experienceid, action})\r\n    .then((response) => {\r\n      return updateReactionsUI(experienceid, response.likes, response.dislikes, action);\r\n    })\r\n    .fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Update the like and dislike buttons in the UI.\r\n * @param {number} experienceid - The id of the experience.\r\n * @param {number} likes - The number of likes.\r\n * @param {number} dislikes - The number of dislikes.\r\n * @param {number} reaction - The reaction to add. 1 for like, 0 for dislike.\r\n * @return {void}\r\n */\r\nfunction updateReactionsUI(experienceid, likes, dislikes, reaction) {\r\n  const reactionSelectors = {\r\n    \"1\": SELECTORS.BUTTONS.likes,\r\n    \"0\": SELECTORS.BUTTONS.dislikes,\r\n  };\r\n\r\n  $(SELECTORS.BUTTONS.likes + SELECTORS.DATA.id(experienceid)).removeClass(\"active\");\r\n  $(SELECTORS.BUTTONS.dislikes + SELECTORS.DATA.id(experienceid)).removeClass(\"active\");\r\n\r\n  if (reactionSelectors.hasOwnProperty(reaction)) {\r\n    $(reactionSelectors[reaction] + SELECTORS.DATA.id(experienceid)).addClass(\"active\");\r\n  }\r\n\r\n  const likesText = likes ? likes : \"\";\r\n  $(SELECTORS.DATA.id(experienceid) + SELECTORS.COUNTS.likes).text(likesText);\r\n}\r\n\r\n/**\r\n * Toggle the comments section.\r\n * @return {void}\r\n */\r\nfunction toggleComments() {\r\n  $(\"#commentsCollapse\").collapse(\"toggle\");\r\n}\r\n\r\n/**\r\n * Send the comment to the server.\r\n * @return {void}\r\n */\r\nfunction sendComment() {\r\n    const comment = $(SELECTORS.COMMENT_INPUT).val().trim();\r\n    const experienceid = $(SELECTORS.COMMENT_INPUT).data('id');\r\n\r\n    if (comment) {\r\n        saveComment({experienceid, comment})\r\n        .then((response) => {\r\n            //Add the comment to the list\r\n            const comment = response.comment;\r\n            const html = `<li class=\"list-group-item\">${comment.comment}</li>`;\r\n            $(SELECTORS.COMMENTS_LIST).append(html);\r\n            //Update the comment count\r\n            const count = $(SELECTORS.COUNTS.comment).text();\r\n            $(SELECTORS.COUNTS.comment).text(parseInt(count) + 1);\r\n            return;\r\n        })\r\n        .fail(Notification.exception);\r\n        $(SELECTORS.COMMENT_INPUT).val('');\r\n    }\r\n}\r\n\r\n/**\r\n * Set the events for the module.\r\n * @return {void}\r\n */\r\nfunction setEvents() {\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.addLike, function() {\r\n    toggle($(this).data(\"id\"), 1);\r\n  });\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.addDislike, function() {\r\n    toggle($(this).data(\"id\"), 0);\r\n  });\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.toggleComments, toggleComments);\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.sendComment, sendComment);\r\n}\r\n\r\nexport const init = () => {\r\n  setEvents();\r\n};\r\n"],"names":["toggle","experienceid","reaction","reactionSelectors","SELECTORS","BUTTONS","likes","dislikes","isActive","DATA","id","hasClass","action","then","response","updateReactionsUI","fail","Notification","exception","removeClass","hasOwnProperty","addClass","likesText","COUNTS","text","toggleComments","collapse","sendComment","comment","COMMENT_INPUT","val","trim","data","html","COMMENTS_LIST","append","count","parseInt","document","on","ACTIONS","addLike","this","addDislike"],"mappings":"qXAWSA,OAAOC,kBAAcC,gEAAW,WACjCC,kBAAoB,GACnBC,qBAAUC,QAAQC,QAClBF,qBAAUC,QAAQE,UAEnBC,UAAW,mBAAEL,kBAAkBD,UAAYE,qBAAUK,KAAKC,GAAGT,eAAeU,SAAS,UACrFC,OAASJ,SAAW,KAAON,uDAEZ,CAACD,aAAAA,aAAcW,OAAAA,SACjCC,MAAMC,UACEC,kBAAkBd,aAAca,SAASR,MAAOQ,SAASP,SAAUK,UAE3EI,KAAKC,sBAAaC,oBAWdH,kBAAkBd,aAAcK,MAAOC,SAAUL,gBAClDC,kBAAoB,GACnBC,qBAAUC,QAAQC,QAClBF,qBAAUC,QAAQE,8BAGvBH,qBAAUC,QAAQC,MAAQF,qBAAUK,KAAKC,GAAGT,eAAekB,YAAY,8BACvEf,qBAAUC,QAAQE,SAAWH,qBAAUK,KAAKC,GAAGT,eAAekB,YAAY,UAExEhB,kBAAkBiB,eAAelB,+BACjCC,kBAAkBD,UAAYE,qBAAUK,KAAKC,GAAGT,eAAeoB,SAAS,gBAGtEC,UAAYhB,OAAgB,uBAChCF,qBAAUK,KAAKC,GAAGT,cAAgBG,qBAAUmB,OAAOjB,OAAOkB,KAAKF,oBAO1DG,qCACL,qBAAqBC,SAAS,mBAOzBC,oBACCC,SAAU,mBAAExB,qBAAUyB,eAAeC,MAAMC,OAC3C9B,cAAe,mBAAEG,qBAAUyB,eAAeG,KAAK,MAEjDJ,gDACY,CAAC3B,aAAAA,aAAc2B,QAAAA,UAC1Bf,MAAMC,iBAEGc,QAAUd,SAASc,QACnBK,2CAAsCL,QAAQA,qCAClDxB,qBAAU8B,eAAeC,OAAOF,YAE5BG,OAAQ,mBAAEhC,qBAAUmB,OAAOK,SAASJ,2BACxCpB,qBAAUmB,OAAOK,SAASJ,KAAKa,SAASD,OAAS,MAGtDpB,KAAKC,sBAAaC,+BACjBd,qBAAUyB,eAAeC,IAAI,4LAmBnB,yBAVhBQ,UAAUC,GAAG,QAASnC,qBAAUoC,QAAQC,SAAS,WACjDzC,QAAO,mBAAE0C,MAAMV,KAAK,MAAO,0BAE3BM,UAAUC,GAAG,QAASnC,qBAAUoC,QAAQG,YAAY,WACpD3C,QAAO,mBAAE0C,MAAMV,KAAK,MAAO,0BAE3BM,UAAUC,GAAG,QAASnC,qBAAUoC,QAAQf,eAAgBA,oCACxDa,UAAUC,GAAG,QAASnC,qBAAUoC,QAAQb,YAAaA"}