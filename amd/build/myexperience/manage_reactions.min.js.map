{"version":3,"file":"manage_reactions.min.js","sources":["../../src/myexperience/manage_reactions.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport Notification from \"core/notification\";\r\nimport Template from \"core/templates\";\r\nimport { toogleLikeAndDislike, saveComment, getComments } from \"local_dta/repositories/reactionsRepository\";\r\nimport { SELECTORS } from \"./selectors\";\r\n\r\n/**\r\n * Toggle the like and dislike buttons.\r\n * @param {number} experienceid - The id of the experience.\r\n * @param {number} reaction - The reaction to add. 1 for like, 0 for dislike.\r\n */\r\nfunction toggle(experienceid, reaction = null) {\r\n  const reactionSelectors = {\r\n    1: SELECTORS.BUTTONS.likes,\r\n    0: SELECTORS.BUTTONS.dislikes,\r\n  };\r\n  const isActive = $(reactionSelectors[reaction] + SELECTORS.DATA.id(experienceid)).hasClass(\"active\");\r\n  const action = isActive ? null : reaction;\r\n  toogleLikeAndDislike({id: experienceid, action, type: 1})\r\n    .then((response) => {\r\n      return updateReactionsUI(experienceid, response.likes, response.dislikes, action);\r\n    })\r\n    .fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Update the like and dislike buttons in the UI.\r\n * @param {number} experienceid - The id of the experience.\r\n * @param {number} likes - The number of likes.\r\n * @param {number} dislikes - The number of dislikes.\r\n * @param {number} reaction - The reaction to add. 1 for like, 0 for dislike.\r\n * @return {void}\r\n */\r\nfunction updateReactionsUI(experienceid, likes, dislikes, reaction) {\r\n  const reactionSelectors = {\r\n    1: SELECTORS.BUTTONS.likes,\r\n    0: SELECTORS.BUTTONS.dislikes,\r\n  };\r\n\r\n  $(SELECTORS.BUTTONS.likes + SELECTORS.DATA.id(experienceid)).removeClass(\"active\");\r\n  $(SELECTORS.BUTTONS.dislikes + SELECTORS.DATA.id(experienceid)).removeClass(\"active\");\r\n\r\n  if (reactionSelectors.hasOwnProperty(reaction)) {\r\n    $(reactionSelectors[reaction] + SELECTORS.DATA.id(experienceid)).addClass(\"active\");\r\n  }\r\n\r\n  const likesText = likes ? likes : \"\";\r\n  $(SELECTORS.DATA.id(experienceid) + SELECTORS.COUNTS.likes).text(likesText);\r\n}\r\n\r\n/**\r\n * Send the comment to the server.\r\n * @return {void}\r\n */\r\nfunction sendComment() {\r\n  const comment = $(SELECTORS.COMMENT_INPUT).val().trim();\r\n  const experienceid = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n\r\n  if (comment) {\r\n    saveComment({ experienceid, comment })\r\n      .then((response) => {\r\n        if (response.result) {\r\n          return updateCommentsUI();\r\n        }\r\n        return Notification.exception(response);\r\n      })\r\n      .fail(Notification.exception);\r\n    $(SELECTORS.COMMENT_INPUT).val(\"\");\r\n  }\r\n}\r\n\r\n/**\r\n * Update the comments in the UI.\r\n * @return {void}\r\n */\r\nfunction updateCommentsUI() {\r\n  const experienceid = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n  if (!experienceid) {\r\n    return;\r\n  }\r\n  getComments({ experienceid })\r\n    .then((response) => {\r\n      const comments = response.comments.map((comment) => ({\r\n        comment: comment.comment,\r\n        userfullname: comment.user.fullname,\r\n      }));\r\n      Template.render(\"local_dta/experiences/comments\", { comments }).then((html) => {\r\n        $(SELECTORS.COMMENTS_LIST).html(html);\r\n      });\r\n      $(SELECTORS.ACTIONS.viewComment + SELECTORS.DATA.id(experienceid) + \" span\").text(response.comments.length);\r\n      return;\r\n    })\r\n    .fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Set the events for the module.\r\n * @return {void}\r\n */\r\nfunction setEvents() {\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.addLike, function () {\r\n    toggle($(this).data(\"id\"), 1);\r\n  });\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.addDislike, function () {\r\n    toggle($(this).data(\"id\"), 0);\r\n  });\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.sendComment, sendComment);\r\n  $(document).on(\"click\", SELECTORS.ACTIONS.viewComment, updateCommentsUI);\r\n}\r\n\r\nexport const init = () => {\r\n  setEvents();\r\n  updateCommentsUI();\r\n};\r\n"],"names":["toggle","experienceid","reaction","reactionSelectors","SELECTORS","BUTTONS","likes","dislikes","isActive","DATA","id","hasClass","action","type","then","response","updateReactionsUI","fail","Notification","exception","removeClass","hasOwnProperty","addClass","likesText","COUNTS","text","sendComment","comment","COMMENT_INPUT","val","trim","ACTIONS","data","result","updateCommentsUI","comments","map","userfullname","user","fullname","render","html","COMMENTS_LIST","viewComment","length","document","on","addLike","this","addDislike"],"mappings":"sVAWSA,OAAOC,kBAAcC,gEAAW,WACjCC,kBAAoB,GACrBC,qBAAUC,QAAQC,QAClBF,qBAAUC,QAAQE,UAEjBC,UAAW,mBAAEL,kBAAkBD,UAAYE,qBAAUK,KAAKC,GAAGT,eAAeU,SAAS,UACrFC,OAASJ,SAAW,KAAON,uDACZ,CAACQ,GAAIT,aAAcW,OAAAA,OAAQC,KAAM,IACnDC,MAAMC,UACEC,kBAAkBf,aAAcc,SAAST,MAAOS,SAASR,SAAUK,UAE3EK,KAAKC,sBAAaC,oBAWdH,kBAAkBf,aAAcK,MAAOC,SAAUL,gBAClDC,kBAAoB,GACrBC,qBAAUC,QAAQC,QAClBF,qBAAUC,QAAQE,8BAGrBH,qBAAUC,QAAQC,MAAQF,qBAAUK,KAAKC,GAAGT,eAAemB,YAAY,8BACvEhB,qBAAUC,QAAQE,SAAWH,qBAAUK,KAAKC,GAAGT,eAAemB,YAAY,UAExEjB,kBAAkBkB,eAAenB,+BACjCC,kBAAkBD,UAAYE,qBAAUK,KAAKC,GAAGT,eAAeqB,SAAS,gBAGtEC,UAAYjB,OAAgB,uBAChCF,qBAAUK,KAAKC,GAAGT,cAAgBG,qBAAUoB,OAAOlB,OAAOmB,KAAKF,oBAO1DG,oBACDC,SAAU,mBAAEvB,qBAAUwB,eAAeC,MAAMC,OAC3C7B,cAAe,mBAAEG,qBAAU2B,QAAQL,aAAaM,KAAK,MAEvDL,+CACU,CAAE1B,aAAAA,aAAc0B,QAAAA,UACzBb,MAAMC,UACDA,SAASkB,OACJC,mBAEFhB,sBAAaC,UAAUJ,YAE/BE,KAAKC,sBAAaC,+BACnBf,qBAAUwB,eAAeC,IAAI,cAQ1BK,yBACDjC,cAAe,mBAAEG,qBAAU2B,QAAQL,aAAaM,KAAK,MACtD/B,mDAGO,CAAEA,aAAAA,eACXa,MAAMC,iBACCoB,SAAWpB,SAASoB,SAASC,KAAKT,WACtCA,QAASA,QAAQA,QACjBU,aAAcV,QAAQW,KAAKC,gCAEpBC,OAAO,iCAAkC,CAAEL,SAAAA,WAAYrB,MAAM2B,2BAClErC,qBAAUsC,eAAeD,KAAKA,6BAEhCrC,qBAAU2B,QAAQY,YAAcvC,qBAAUK,KAAKC,GAAGT,cAAgB,SAASwB,KAAKV,SAASoB,SAASS,WAGrG3B,KAAKC,sBAAaC,gPAkBH,yBAVhB0B,UAAUC,GAAG,QAAS1C,qBAAU2B,QAAQgB,SAAS,WACjD/C,QAAO,mBAAEgD,MAAMhB,KAAK,MAAO,0BAE3Ba,UAAUC,GAAG,QAAS1C,qBAAU2B,QAAQkB,YAAY,WACpDjD,QAAO,mBAAEgD,MAAMhB,KAAK,MAAO,0BAE3Ba,UAAUC,GAAG,QAAS1C,qBAAU2B,QAAQL,YAAaA,iCACrDmB,UAAUC,GAAG,QAAS1C,qBAAU2B,QAAQY,YAAaT,kBAKvDA"}