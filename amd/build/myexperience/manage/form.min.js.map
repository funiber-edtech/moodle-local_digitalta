{"version":3,"file":"form.min.js","sources":["../../../src/myexperience/manage/form.js"],"sourcesContent":["import $ from \"jquery\";\nimport Notification from \"core/notification\";\nimport {createTinyMCE} from './../../tiny/manage';\nimport {setEventListeners} from \"./listeners\";\nimport {activateStep} from \"./steps\";\nimport {experienceUpsert, createTags} from \"./../../repositories/experience_repository\";\nimport {autocompleteTags} from \"local_dta/tags/autocomplete\";\nimport { saveFiles } from \"../../files/filemanager\";\n\n\n\n/**\n * Set event listeners for the module.\n * @return {void}\n * */\nfunction setDefaultTinyMCE() {\n  $(\".editor\").each(function() {\n    createTinyMCE(this.id);\n  });\n}\n\n/**\n * Collapse the add section menu.\n * @return {void}\n */\nexport function collapseAddSectionMenu() {\n  const importerParent = $(this).closest(\"#importer\");\n  const importerDiv = importerParent.find(\"#import_div\");\n  const addIcon = $(this).find(\"i\");\n  if (importerParent.hasClass(\"collapsed\")) {\n    importerParent.removeClass(\"collapsed\");\n    importerDiv.css(\"display\", \"flex\");\n    addIcon.removeClass(\"fa fa-plus-circle\").addClass(\"fa fa-minus-circle\");\n  } else {\n    importerParent.addClass(\"collapsed\");\n    importerDiv.hide();\n    addIcon.removeClass(\"fa fa-minus-circle\").addClass(\"fa fa-plus-circle\");\n  }\n}\n\n// /**\n//  * Save the text section.\n//  * @param {object} btn - The data to save.\n//  * @return {void}\n//  */\n// function saveTextSection(btn) {\n//   const data = btn.data();\n//   const {target, group, id} = data;\n//   const reflectionid = $(\"#reflectionid\").val();\n//   const content = window.tinyMCE.get(target).getContent();\n//   sectionTextUpsert({ reflectionid, group, content, id })\n//     .then(() => {\n//       Notification.addNotification({\n//         message: \"Section saved successfully.\",\n//         type: \"success\",\n//       });\n//       return;\n//     })\n//     .fail(Notification.exception);\n// }\n\n/**\n * Show save case modal\n * @return {void}\n */\n// async function showImportCase() {\n//   const cases = await getCases();\n//   const saveModal = await ModalFactory.create({\n//     type: ModalFactory.types.SAVE_CANCEL,\n//     title: get_string(\"experience_reflection_import_cases_title\", \"local_dta\"),\n//     body: Templates.render(\"local_dta/experiences/manage/import-case-modal\", { cases }),\n//   });\n//   saveModal.setSaveButtonText(\"Import\");\n\n//   saveModal.getRoot().on(ModalEvents.save, () => {\n//     const caseIds = [];\n//     const selectedCases = saveModal.getRoot().find(\"input:checked\");\n//     selectedCases.each(function () {\n//       caseIds.push($(this).val());\n//     });\n//     saveModal.hide();\n//     //eslint-disable-next-line no-console\n//     console.log(caseIds);\n//   }\n//   );\n\n//   saveModal.show();\n// }\n\n/**\n * Handle new tag.\n * @param {Array} selectedOptions - The selected options.\n * @return {void}\n */\nexport async function handleNewTag(selectedOptions) {\n\n  for (var i = 0; i < selectedOptions.length; i++) {\n    if (selectedOptions[i].value === \"-1\") {\n      selectedOptions[i].label = selectedOptions[i].label.replace(\"Create: \", \"\");\n      const {id} = await saveNewTag(selectedOptions[i].label);\n      selectedOptions[i].value = parseInt(id);\n    }\n  }\n}\n\n/**\n * Save new tag\n * @param {string} tagName - The tag name.\n * @return {Promise}\n */\nasync function saveNewTag(tagName) {\n  try {\n    return await createTags({\n      tag: tagName\n    });\n  } catch (error) {\n    return Notification.exception(error);\n  }\n}\n/**\n * Save the experience.\n * @return {void}\n * */\nexport async function saveExperience() {\n  const experienceTitle = $(\"#experience_title\").val(),\n  experienceVisibility = $(\"#experience_visibility\").val(),\n    experienceLang = $(\"#experience_lang\").val(),\n    experienceIntroduction = window.tinyMCE.get(\"experience_introduction\").getContent(),\n    experienceProblem = window.tinyMCE.get(\"experience_problem\").getContent(),\n    tags = $(\"#autocomplete_tags\").val();\n\n    try {\n      saveFiles(\"featurePicture\", \"fileManager\");\n      await experienceUpsert({\n        id: 0,\n        title: experienceTitle,\n        description: experienceIntroduction,\n        context: experienceProblem,\n        lang: experienceLang,\n        visible: experienceVisibility,\n        tags\n      });\n      Notification.addNotification({\n        message: \"Experience saved successfully.\",\n        type: \"success\",\n      });\n      activateStep(2);\n      return;\n    } catch (error) {\n      Notification.exception(error);\n    }\n}\n\n\nexport const init = () => {\n  setDefaultTinyMCE();\n  autocompleteTags();\n  activateStep();\n  setEventListeners();\n};\n"],"names":["saveNewTag","tagName","tag","error","Notification","exception","importerParent","this","closest","importerDiv","find","addIcon","hasClass","removeClass","css","addClass","hide","selectedOptions","i","length","value","label","replace","id","parseInt","experienceTitle","val","experienceVisibility","experienceLang","experienceIntroduction","window","tinyMCE","get","getContent","experienceProblem","tags","title","description","context","lang","visible","addNotification","message","type","each"],"mappings":"+bA8GeA,WAAWC,0BAET,qCAAW,CACtBC,IAAKD,UAEP,MAAOE,cACAC,sBAAaC,UAAUF,iHA1F1BG,gBAAiB,mBAAEC,MAAMC,QAAQ,aACjCC,YAAcH,eAAeI,KAAK,eAClCC,SAAU,mBAAEJ,MAAMG,KAAK,KACzBJ,eAAeM,SAAS,cAC1BN,eAAeO,YAAY,aAC3BJ,YAAYK,IAAI,UAAW,QAC3BH,QAAQE,YAAY,qBAAqBE,SAAS,wBAElDT,eAAeS,SAAS,aACxBN,YAAYO,OACZL,QAAQE,YAAY,sBAAsBE,SAAS,4DA0DpBE,qBAE5B,IAAIC,EAAI,EAAGA,EAAID,gBAAgBE,OAAQD,OACT,OAA7BD,gBAAgBC,GAAGE,MAAgB,CACrCH,gBAAgBC,GAAGG,MAAQJ,gBAAgBC,GAAGG,MAAMC,QAAQ,WAAY,UAClEC,GAACA,UAAYvB,WAAWiB,gBAAgBC,GAAGG,OACjDJ,gBAAgBC,GAAGE,MAAQI,SAASD,0EAwBlCE,iBAAkB,mBAAE,qBAAqBC,MAC/CC,sBAAuB,mBAAE,0BAA0BD,MACjDE,gBAAiB,mBAAE,oBAAoBF,MACvCG,uBAAyBC,OAAOC,QAAQC,IAAI,2BAA2BC,aACvEC,kBAAoBJ,OAAOC,QAAQC,IAAI,sBAAsBC,aAC7DE,MAAO,mBAAE,sBAAsBT,2CAGnB,iBAAkB,qBACtB,2CAAiB,CACrBH,GAAI,EACJa,MAAOX,gBACPY,YAAaR,uBACbS,QAASJ,kBACTK,KAAMX,eACNY,QAASb,qBACTQ,KAAAA,6BAEWM,gBAAgB,CAC3BC,QAAS,iCACTC,KAAM,wCAEK,GAEb,MAAOxC,6BACME,UAAUF,mHAKT,yBA1IhB,WAAWyC,MAAK,qCACFrC,KAAKgB"}