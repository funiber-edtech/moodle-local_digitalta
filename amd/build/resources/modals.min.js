define("local_digitalta/resources/modals",["exports","local_digitalta/themes/autocomplete","local_digitalta/tags/autocomplete","local_digitalta/tiny/manage","local_digitalta/experiences/modals","local_digitalta/repositories/experiences_repository","core/normalise","local_digitalta/repositories/languages_repository","local_digitalta/repositories/resources_repository","core/modal","core/modal_events","core/modal_factory","core/modal_registry","core/notification","../tiny/manage"],(function(_exports,_autocomplete,_autocomplete2,_manage,_modals,_experiences_repository,_normalise,_languages_repository,_resources_repository,_modal,_modal_events,_modal_factory,_modal_registry,_notification,_manage2){var _class;function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.showManageResourcesModal=_exports.displayManageResourcesModal=void 0,_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_modal_factory=_interopRequireDefault(_modal_factory),_modal_registry=_interopRequireDefault(_modal_registry),_notification=_interopRequireDefault(_notification);const manageResourcesModal=(_defineProperty(_class=class extends _modal.default{registerEventListeners(){super.registerEventListeners(),this.registerCloseOnSave(),this.registerCloseOnCancel()}},"TYPE","local_digitalta/manageResourcesModal"),_defineProperty(_class,"TEMPLATE","local_digitalta/resources/modals/modal-manage"),_class);_modal_registry.default.register(manageResourcesModal.TYPE,manageResourcesModal,manageResourcesModal.TEMPLATE);_exports.showManageResourcesModal=async function(){let resourceid=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,experienceid=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const types=await(0,_resources_repository.resourcesTypesGet)().then((response=>response.types)),languages=await(0,_languages_repository.languagesGet)({prioritizeInstalled:!0}),resource=null===resourceid?{}:await(0,_resources_repository.resourcesGet)({id:resourceid}).then((response=>response.resources[0])),experience=null===experienceid?Promise.resolve({}):await(0,_experiences_repository.experiencesGet)(experienceid).then((response=>response.experience));Promise.all([languages,resource,experience]).then((_ref=>{let[languages,resource,experience]=_ref;return displayManageResourcesModal(types,languages,resource,experience)}))};const displayManageResourcesModal=async function(types,languages){var _resource$id,_resource$name,_resource$path,_resource$description,_resource$themes,_resource$tags,_resource$type,_resource$format;let resource=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},experience=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},anyLanguageSelected=!1;languages=languages.map((language=>(language.selected=!1,resource.hasOwnProperty("lang")&&language.code===resource.lang&&(language.selected=anyLanguageSelected=!0),{key:language.code,value:language.name,selected:language.selected}))),anyLanguageSelected||(languages[0].selected=!0),languages[0].selected=!0;let anyTypeSelected=!1;types=types.map((type=>(type.selected=!1,resource.hasOwnProperty("type")&&type.id===resource.type&&(type.selected=anyTypeSelected=!0),{key:type.id,value:type.name,selected:type.selected}))),anyTypeSelected||(types[0].selected=!0);const modal=await _modal_factory.default.create({type:manageResourcesModal.TYPE,templateContext:{experienceid:experience.id,languages:languages,types:types,current:{id:null!==(_resource$id=resource.id)&&void 0!==_resource$id?_resource$id:0,name:null!==(_resource$name=resource.name)&&void 0!==_resource$name?_resource$name:null,path:null!==(_resource$path=resource.path)&&void 0!==_resource$path?_resource$path:null,description:null!==(_resource$description=resource.description)&&void 0!==_resource$description?_resource$description:null,themes:null!==(_resource$themes=resource.themes)&&void 0!==_resource$themes?_resource$themes:[],tags:null!==(_resource$tags=resource.tags)&&void 0!==_resource$tags?_resource$tags:[],type:null!==(_resource$type=resource.type)&&void 0!==_resource$type?_resource$type:null,format:null!==(_resource$format=resource.format)&&void 0!==_resource$format?_resource$format:"Link"}},large:!0,removeOnClose:!0});modal.show();const $root=modal.getRoot();if((0,_manage.createTinyMCE)("resource-manage-description"),(0,_autocomplete2.autocompleteTags)("#resource-manage-tags"),(0,_autocomplete.autocompleteThemes)("#resource-manage-themes"),experience){const changeElement=$root.find("#changeToImportResource").get(0);changeElement&&(changeElement.onclick=()=>{(0,_modals.displayLinkResourcesModal)(!0),modal.destroy()})}$root.on(_modal_events.default.save,((event,modal)=>{event.preventDefault();const form=$root[0].querySelector("form");validateManageRequiredFields(form)&&handleManageResourcesModalSubmission(event,modal)}))};_exports.displayManageResourcesModal=displayManageResourcesModal;const handleManageResourcesModalSubmission=async(event,modal)=>{const form=(0,_normalise.getList)(modal.getRoot())[0].querySelector("form");if(!form)return;const experienceid=form.querySelector('input[name="resource-manage-experienceid"]').value,formData={id:form.querySelector('input[name="resource-manage-id"]').value,name:form.querySelector('input[name="resource-manage-name"]').value,description:(0,_manage.getTinyMCEContent)("resource-manage-description"),type:form.querySelector('select[name="resource-manage-type"]').value,format:form.querySelector('input[name="resource-manage-format"]').value,path:form.querySelector('input[name="resource-manage-path"]').value,lang:form.querySelector('select[name="resource-manage-language"]').value,themes:Array.from(form.querySelectorAll('select[name="resource-manage-themes"] option:checked'),(option=>option.value)),tags:Array.from(form.querySelectorAll('select[name="resource-manage-tags"] option:checked'),(option=>option.value))};try{formData.description=await(0,_manage2.processFiles)(formData.description);const resourceid=await(0,_resources_repository.resourcesUpsert)(formData).then((response=>response.resourceid));if(_notification.default.addNotification({message:"Resource saved successfully.",type:"success"}),experienceid)return void(0,_modals.displayLinkResourceModal)(experienceid,resourceid);location.reload()}catch(error){_notification.default.exception(error)}},validateManageRequiredFields=form=>{const requiredFields=form.querySelectorAll("input[required], select[required], textarea[required]");for(const field of requiredFields)if(!field.value)return field.focus(),!1;return!0}}));

//# sourceMappingURL=modals.min.js.map