{"version":3,"file":"manage_resources.min.js","sources":["../../src/resources/manage_resources.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport addResourceModal from 'local_dta/resources/add_resource_modal';\nimport ModalEvents from 'core/modal_events';\nimport {getList} from 'core/normalise';\nimport {resourcesUpsert} from 'local_dta/repositories/resources_repository';\nimport Notification from 'core/notification';\n\n/**\n * Handle the submission of the dialogue.\n *\n * @param {Event} event\n * @param {Modal} modal\n */\nconst handleDialogueSubmission = async(event, modal) => {\n  const form = getList(modal.getRoot())[0].querySelector('form');\n\n  if (!form) {\n      return;\n  }\n  const formData = {\n      id: 0,\n      name: form.querySelector('input[name=\"nameInput\"]').value,\n      path: form.querySelector('input[name=\"urlInput\"]').value,\n      description: form.querySelector('textarea[name=\"descriptionInput\"]').value,\n      // theme: form.querySelector('select[name=\"themeSelect\"] option:checked').textContent,\n      // tags: Array.from(form.querySelector('select[name=\"tagSelect\"]').selectedOptions).map(option => option.value),\n      type: form.querySelector('select[name=\"fileTypeSelect\"]').value,\n      lang: form.querySelector('select[name=\"languageSelect\"]').value\n  };\n\n  try {\n      const response = await resourcesUpsert(formData);\n      // eslint-disable-next-line no-console\n      console.log(response);\n  } catch (error) {\n      Notification.exception(error);\n  }\n\n};\n\nconst displayDialogue = async() => {\n\n  const themes = [\n  ];\n\n  const modal = await ModalFactory.create({\n      type: addResourceModal.TYPE,\n      templateContext: {elementid_:  Date.now(), themes: themes},\n      large: true,\n  });\n  modal.show();\n  const $root = modal.getRoot();\n  $root.on(ModalEvents.save, (event, modal) => {\n      handleDialogueSubmission(event, modal);\n  });\n};\n\nexport const init = () => {\n  document.getElementById('addResourceButton').addEventListener('click', displayDialogue);\n};\n\n"],"names":["displayDialogue","async","modal","ModalFactory","create","type","addResourceModal","TYPE","templateContext","elementid_","Date","now","themes","large","show","getRoot","on","ModalEvents","save","event","form","querySelector","formData","id","name","value","path","description","lang","response","console","log","error","exception","handleDialogueSubmission","document","getElementById","addEventListener"],"mappings":"stBAwCMA,gBAAkBC,gBAKhBC,YAAcC,uBAAaC,OAAO,CACpCC,KAAMC,4BAAiBC,KACvBC,gBAAiB,CAACC,WAAaC,KAAKC,MAAOC,OALhC,IAMXC,OAAO,IAEXX,MAAMY,OACQZ,MAAMa,UACdC,GAAGC,sBAAYC,MAAM,CAACC,MAAOjB,SAvCJD,OAAMkB,MAAOjB,eACtCkB,MAAO,sBAAQlB,MAAMa,WAAW,GAAGM,cAAc,YAElDD,kBAGCE,SAAW,CACbC,GAAI,EACJC,KAAMJ,KAAKC,cAAc,2BAA2BI,MACpDC,KAAMN,KAAKC,cAAc,0BAA0BI,MACnDE,YAAaP,KAAKC,cAAc,qCAAqCI,MAGrEpB,KAAMe,KAAKC,cAAc,iCAAiCI,MAC1DG,KAAMR,KAAKC,cAAc,iCAAiCI,iBAIpDI,eAAiB,yCAAgBP,UAEvCQ,QAAQC,IAAIF,UACd,MAAOG,6BACQC,UAAUD,SAkBvBE,CAAyBf,EAAOjB,yBAIlB,KAClBiC,SAASC,eAAe,qBAAqBC,iBAAiB,QAASrC"}