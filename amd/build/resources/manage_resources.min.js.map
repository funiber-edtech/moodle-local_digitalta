{"version":3,"file":"manage_resources.min.js","sources":["../../src/resources/manage_resources.js"],"sourcesContent":["import ModalFactory from \"core/modal_factory\";\r\nimport addResourceModal from \"local_dta/resources/add_resource_modal\";\r\nimport { displaylinkResourcesModal } from \"local_dta/myexperience/view/modals\";\r\nimport ModalEvents from \"core/modal_events\";\r\nimport { getList } from \"core/normalise\";\r\nimport { resourcesUpsert } from \"local_dta/repositories/resources_repository\";\r\nimport Notification from \"core/notification\";\r\n\r\n/**\r\n * Handle the submission of the dialogue.\r\n *\r\n * @param {Event} event\r\n * @param {Modal} modal\r\n */\r\nconst handleDialogueSubmission = async (event, modal) => {\r\n  const form = getList(modal.getRoot())[0].querySelector(\"form\");\r\n\r\n  if (!form) {\r\n    return;\r\n  }\r\n  const formData = {\r\n    id: 0,\r\n    name: form.querySelector('input[name=\"nameInput\"]').value,\r\n    path: form.querySelector('input[name=\"urlInput\"]').value,\r\n    description: form.querySelector('textarea[name=\"descriptionInput\"]').value,\r\n    // theme: form.querySelector('select[name=\"themeSelect\"] option:checked').textContent,\r\n    // tags: Array.from(form.querySelector('select[name=\"tagSelect\"]').selectedOptions).map(option => option.value),\r\n    type: form.querySelector('select[name=\"fileTypeSelect\"]').value,\r\n    lang: form.querySelector('select[name=\"languageSelect\"]').value,\r\n  };\r\n\r\n  try {\r\n    const response = await resourcesUpsert(formData);\r\n    // eslint-disable-next-line no-console\r\n    console.log(response);\r\n  } catch (error) {\r\n    Notification.exception(error);\r\n  }\r\n};\r\n\r\nconst displayDialogue = async (change) => {\r\n  const themes = [];\r\n\r\n  const modal = await ModalFactory.create({\r\n    type: addResourceModal.TYPE,\r\n    templateContext: { elementid_: Date.now(), themes: themes, change: change },\r\n    large: true,\r\n  });\r\n  modal.show();\r\n  const $root = modal.getRoot();\r\n  if (change) {\r\n    const changeElement = $root.find(\"#changeToImportResource\").get(0);\r\n    if (changeElement) {\r\n      changeElement.onclick = () => {\r\n        displaylinkResourcesModal();\r\n        modal.hide();\r\n      };\r\n    }\r\n  }\r\n\r\n  $root.on(ModalEvents.save, (event, modal) => {\r\n    handleDialogueSubmission(event, modal);\r\n  });\r\n};\r\n\r\nexport const init = (change) => {\r\n  if (!change) {\r\n    change = false;\r\n  }\r\n  document.getElementById(\"addResourceButton\").addEventListener(\"click\", () => displayDialogue(change));\r\n};\r\n"],"names":["displayDialogue","async","modal","ModalFactory","create","type","addResourceModal","TYPE","templateContext","elementid_","Date","now","themes","change","large","show","$root","getRoot","changeElement","find","get","onclick","hide","on","ModalEvents","save","event","form","querySelector","formData","id","name","value","path","description","lang","response","console","log","error","exception","handleDialogueSubmission","document","getElementById","addEventListener"],"mappings":"mwBAwCMA,gBAAkBC,MAAAA,eAGhBC,YAAcC,uBAAaC,OAAO,CACtCC,KAAMC,4BAAiBC,KACvBC,gBAAiB,CAAEC,WAAYC,KAAKC,MAAOC,OAJ9B,GAI8CC,OAAQA,QACnEC,OAAO,IAETZ,MAAMa,aACAC,MAAQd,MAAMe,aAChBJ,OAAQ,OACJK,cAAgBF,MAAMG,KAAK,2BAA2BC,IAAI,GAC5DF,gBACFA,cAAcG,QAAU,6CAEtBnB,MAAMoB,SAKZN,MAAMO,GAAGC,sBAAYC,MAAM,CAACC,MAAOxB,SA9CJD,OAAOyB,MAAOxB,eACvCyB,MAAO,sBAAQzB,MAAMe,WAAW,GAAGW,cAAc,YAElDD,kBAGCE,SAAW,CACfC,GAAI,EACJC,KAAMJ,KAAKC,cAAc,2BAA2BI,MACpDC,KAAMN,KAAKC,cAAc,0BAA0BI,MACnDE,YAAaP,KAAKC,cAAc,qCAAqCI,MAGrE3B,KAAMsB,KAAKC,cAAc,iCAAiCI,MAC1DG,KAAMR,KAAKC,cAAc,iCAAiCI,iBAIpDI,eAAiB,yCAAgBP,UAEvCQ,QAAQC,IAAIF,UACZ,MAAOG,6BACMC,UAAUD,SAyBvBE,CAAyBf,EAAOxB,yBAIfW,SACdA,SACHA,QAAS,GAEX6B,SAASC,eAAe,qBAAqBC,iBAAiB,SAAS,IAAM5C,gBAAgBa"}