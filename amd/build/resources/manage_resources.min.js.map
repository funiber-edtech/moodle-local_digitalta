{"version":3,"file":"manage_resources.min.js","sources":["../../src/resources/manage_resources.js"],"sourcesContent":["import ModalFactory from \"core/modal_factory\";\r\nimport addResourceModal from \"local_dta/resources/add_resource_modal\";\r\nimport { displaylinkResourcesModal } from \"local_dta/experiences/modals\";\r\nimport ModalEvents from \"core/modal_events\";\r\nimport { getList } from \"core/normalise\";\r\nimport { resourcesUpsert } from \"local_dta/repositories/resources_repository\";\r\nimport Notification from \"core/notification\";\r\n\r\n/**\r\n * Handle the submission of the dialogue.\r\n *\r\n * @param {Event} event\r\n * @param {Modal} modal\r\n */\r\nconst handleDialogueSubmission = async (event, modal) => {\r\n    const form = getList(modal.getRoot())[0].querySelector(\"form\");\r\n\r\n    if (!form) {\r\n        return;\r\n    }\r\n    const formData = {\r\n        id: 0,\r\n        name: form.querySelector('input[name=\"nameInput\"]').value,\r\n        path: form.querySelector('input[name=\"urlInput\"]').value,\r\n        description: form.querySelector('textarea[name=\"descriptionInput\"]').value,\r\n        themes: Array.from(\r\n            form.querySelectorAll('select[name=\"themeSelect\"] option:checked'),\r\n            option => option.value),\r\n        tags: Array.from(\r\n            form.querySelectorAll('select[name=\"tagSelect\"] option:checked'),\r\n            option => option.value),\r\n        type: form.querySelector('select[name=\"typeSelect\"]').value,\r\n        format: form.querySelector('input[name=\"formatInput\"]').value,\r\n        lang: form.querySelector('select[name=\"languageSelect\"]').value,\r\n    };\r\n\r\n    try {\r\n        await resourcesUpsert(formData);\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n};\r\n\r\n/**\r\n * Display the dialogue.\r\n *\r\n * @param {Object} options\r\n */\r\nexport const displayDialogue = async (options) => {\r\n    const languages = [\r\n        { value: 'es', text: 'Spanish' },\r\n        { value: 'en', text: 'English' }\r\n    ];\r\n\r\n    const modal = await ModalFactory.create({\r\n        type: addResourceModal.TYPE,\r\n        templateContext: {\r\n            elementid_: Date.now(),\r\n            themes: options.themes,\r\n            tags: options.tags,\r\n            types: options.types,\r\n            format_input_id: options.format_id,\r\n            languages: languages,\r\n            change: options.change\r\n        },\r\n        large: true,\r\n    });\r\n    modal.show();\r\n    const $root = modal.getRoot();\r\n    if (options.change) {\r\n        const changeElement = $root.find(\"#changeToImportResource\").get(0);\r\n        if (changeElement) {\r\n            changeElement.onclick = () => {\r\n                displaylinkResourcesModal(true);\r\n                modal.hide();\r\n            };\r\n        }\r\n    }\r\n\r\n    $root.on(ModalEvents.save, (event, modal) => {\r\n        handleDialogueSubmission(event, modal);\r\n    });\r\n};\r\n\r\n/**\r\n * Initialise the module.\r\n *\r\n * @param {Object} options\r\n */\r\nexport const init = (options) => {\r\n    if (typeof options.change === 'undefined') {\r\n        options.change = false;\r\n    }\r\n    document.getElementById(\"addResourceButton\").addEventListener(\"click\", () => displayDialogue(options));\r\n};\r\n"],"names":["displayDialogue","async","modal","ModalFactory","create","type","addResourceModal","TYPE","templateContext","elementid_","Date","now","themes","options","tags","types","format_input_id","format_id","languages","value","text","change","large","show","$root","getRoot","changeElement","find","get","onclick","hide","on","ModalEvents","save","event","form","querySelector","formData","id","name","path","description","Array","from","querySelectorAll","option","format","lang","error","exception","handleDialogueSubmission","document","getElementById","addEventListener"],"mappings":"sxBAgDaA,gBAAkBC,MAAAA,gBAMrBC,YAAcC,uBAAaC,OAAO,CACpCC,KAAMC,4BAAiBC,KACvBC,gBAAiB,CACbC,WAAYC,KAAKC,MACjBC,OAAQC,QAAQD,OAChBE,KAAMD,QAAQC,KACdC,MAAOF,QAAQE,MACfC,gBAAiBH,QAAQI,UACzBC,UAbU,CACd,CAAEC,MAAO,KAAMC,KAAM,WACrB,CAAED,MAAO,KAAMC,KAAM,YAYjBC,OAAQR,QAAQQ,QAEpBC,OAAO,IAEXpB,MAAMqB,aACAC,MAAQtB,MAAMuB,aAChBZ,QAAQQ,OAAQ,OACVK,cAAgBF,MAAMG,KAAK,2BAA2BC,IAAI,GAC5DF,gBACAA,cAAcG,QAAU,4CACM,GAC1B3B,MAAM4B,SAKlBN,MAAMO,GAAGC,sBAAYC,MAAM,CAACC,MAAOhC,SAjEND,OAAOiC,MAAOhC,eACrCiC,MAAO,sBAAQjC,MAAMuB,WAAW,GAAGW,cAAc,YAElDD,kBAGCE,SAAW,CACbC,GAAI,EACJC,KAAMJ,KAAKC,cAAc,2BAA2BjB,MACpDqB,KAAML,KAAKC,cAAc,0BAA0BjB,MACnDsB,YAAaN,KAAKC,cAAc,qCAAqCjB,MACrEP,OAAQ8B,MAAMC,KACVR,KAAKS,iBAAiB,8CACtBC,QAAUA,OAAO1B,QACrBL,KAAM4B,MAAMC,KACRR,KAAKS,iBAAiB,4CACtBC,QAAUA,OAAO1B,QACrBd,KAAM8B,KAAKC,cAAc,6BAA6BjB,MACtD2B,OAAQX,KAAKC,cAAc,6BAA6BjB,MACxD4B,KAAMZ,KAAKC,cAAc,iCAAiCjB,iBAIpD,yCAAgBkB,UACxB,MAAOW,6BACQC,UAAUD,SAyCvBE,CAAyBhB,EAAOhC,kEASnBW,eACa,IAAnBA,QAAQQ,SACfR,QAAQQ,QAAS,GAErB8B,SAASC,eAAe,qBAAqBC,iBAAiB,SAAS,IAAMrD,gBAAgBa"}