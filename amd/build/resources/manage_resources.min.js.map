{"version":3,"file":"manage_resources.min.js","sources":["../../src/resources/manage_resources.js"],"sourcesContent":["import ModalFactory from \"core/modal_factory\";\nimport addResourceModal from \"local_dta/resources/add_resource_modal\";\nimport { displaylinkResourcesModal } from \"local_dta/myexperience/view/modals\";\nimport ModalEvents from \"core/modal_events\";\nimport { getList } from \"core/normalise\";\nimport { resourcesUpsert } from \"local_dta/repositories/resources_repository\";\nimport Notification from \"core/notification\";\n\n/**\n * Handle the submission of the dialogue.\n *\n * @param {Event} event\n * @param {Modal} modal\n */\nconst handleDialogueSubmission = async (event, modal) => {\n  const form = getList(modal.getRoot())[0].querySelector(\"form\");\n\n  if (!form) {\n    return;\n  }\n  const formData = {\n    id: 0,\n    name: form.querySelector('input[name=\"nameInput\"]').value,\n    path: form.querySelector('input[name=\"urlInput\"]').value,\n    description: form.querySelector('textarea[name=\"descriptionInput\"]').value,\n    // theme: form.querySelector('select[name=\"themeSelect\"] option:checked').textContent,\n    // tags: Array.from(form.querySelector('select[name=\"tagSelect\"]').selectedOptions).map(option => option.value),\n    type: form.querySelector('select[name=\"fileTypeSelect\"]').value,\n    lang: form.querySelector('select[name=\"languageSelect\"]').value,\n  };\n\n  try {\n    const response = await resourcesUpsert(formData);\n    // eslint-disable-next-line no-console\n    console.log(response);\n  } catch (error) {\n    Notification.exception(error);\n  }\n};\n\nconst displayDialogue = async (change) => {\n  const themes = [];\n\n  const modal = await ModalFactory.create({\n    type: addResourceModal.TYPE,\n    templateContext: { elementid_: Date.now(), themes: themes, change: change },\n    large: true,\n  });\n  modal.show();\n  const $root = modal.getRoot();\n  if (change) {\n    const changeElement = $root.find(\"#changeToImportResource\").get(0);\n    if (changeElement) {\n      changeElement.onclick = () => {\n        displaylinkResourcesModal();\n        modal.hide();\n      };\n    }\n  }\n\n  $root.on(ModalEvents.save, (event, modal) => {\n    handleDialogueSubmission(event, modal);\n  });\n};\n\nexport const init = (change) => {\n  if (!change) {\n    change = false;\n  }\n  document.getElementById(\"addResourceButton\").addEventListener(\"click\", () => displayDialogue(change));\n};\n"],"names":["displayDialogue","async","modal","ModalFactory","create","type","addResourceModal","TYPE","templateContext","elementid_","Date","now","themes","change","large","show","$root","getRoot","changeElement","find","get","onclick","hide","on","ModalEvents","save","event","form","querySelector","formData","id","name","value","path","description","lang","response","console","log","error","exception","handleDialogueSubmission","document","getElementById","addEventListener"],"mappings":"mwBAwCMA,gBAAkBC,MAAAA,eAGhBC,YAAcC,uBAAaC,OAAO,CACtCC,KAAMC,4BAAiBC,KACvBC,gBAAiB,CAAEC,WAAYC,KAAKC,MAAOC,OAJ9B,GAI8CC,OAAQA,QACnEC,OAAO,IAETZ,MAAMa,aACAC,MAAQd,MAAMe,aAChBJ,OAAQ,OACJK,cAAgBF,MAAMG,KAAK,2BAA2BC,IAAI,GAC5DF,gBACFA,cAAcG,QAAU,6CAEtBnB,MAAMoB,SAKZN,MAAMO,GAAGC,sBAAYC,MAAM,CAACC,MAAOxB,SA9CJD,OAAOyB,MAAOxB,eACvCyB,MAAO,sBAAQzB,MAAMe,WAAW,GAAGW,cAAc,YAElDD,kBAGCE,SAAW,CACfC,GAAI,EACJC,KAAMJ,KAAKC,cAAc,2BAA2BI,MACpDC,KAAMN,KAAKC,cAAc,0BAA0BI,MACnDE,YAAaP,KAAKC,cAAc,qCAAqCI,MAGrE3B,KAAMsB,KAAKC,cAAc,iCAAiCI,MAC1DG,KAAMR,KAAKC,cAAc,iCAAiCI,iBAIpDI,eAAiB,yCAAgBP,UAEvCQ,QAAQC,IAAIF,UACZ,MAAOG,6BACMC,UAAUD,SAyBvBE,CAAyBf,EAAOxB,yBAIfW,SACdA,SACHA,QAAS,GAEX6B,SAASC,eAAe,qBAAqBC,iBAAiB,SAAS,IAAM5C,gBAAgBa"}