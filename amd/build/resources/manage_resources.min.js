define("local_dta/resources/manage_resources",["exports","core/modal_factory","local_dta/resources/add_resource_modal","local_dta/myexperience/view/modals","core/modal_events","core/normalise","local_dta/repositories/resources_repository","core/notification"],(function(_exports,_modal_factory,_add_resource_modal,_modals,_modal_events,_normalise,_resources_repository,_notification){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_modal_factory=_interopRequireDefault(_modal_factory),_add_resource_modal=_interopRequireDefault(_add_resource_modal),_modal_events=_interopRequireDefault(_modal_events),_notification=_interopRequireDefault(_notification);const displayDialogue=async change=>{const modal=await _modal_factory.default.create({type:_add_resource_modal.default.TYPE,templateContext:{elementid_:Date.now(),themes:[],change:change},large:!0});modal.show();const $root=modal.getRoot();if(change){const changeElement=$root.find("#changeToImportResource").get(0);changeElement&&(changeElement.onclick=()=>{(0,_modals.displaylinkResourcesModal)(),modal.hide()})}$root.on(_modal_events.default.save,((event,modal)=>{(async(event,modal)=>{const form=(0,_normalise.getList)(modal.getRoot())[0].querySelector("form");if(!form)return;const formData={id:0,name:form.querySelector('input[name="nameInput"]').value,path:form.querySelector('input[name="urlInput"]').value,description:form.querySelector('textarea[name="descriptionInput"]').value,type:form.querySelector('select[name="fileTypeSelect"]').value,lang:form.querySelector('select[name="languageSelect"]').value};try{const response=await(0,_resources_repository.resourcesUpsert)(formData);console.log(response)}catch(error){_notification.default.exception(error)}})(0,modal)}))};_exports.init=change=>{change||(change=!1),document.getElementById("addResourceButton").addEventListener("click",(()=>displayDialogue(change)))}}));

//# sourceMappingURL=manage_resources.min.js.map