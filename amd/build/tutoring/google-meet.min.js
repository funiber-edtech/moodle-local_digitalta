define("local_digitalta/tutoring/google-meet",["exports","local_digitalta/repositories/tutoring_repository","jquery"],(function(_exports,_tutoring_repository,_jquery){var obj;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SELECTORS=void 0,_exports.closeCallOnClick=closeCallOnClick,_exports.setEventListeners=_exports.init=void 0,_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj};const SELECTORS={BUTTONS:{closeCall:"#close-video-meeting",closeChatCall:"#close-videocall-from-chat"}};_exports.SELECTORS=SELECTORS;const setEventListeners=()=>{(0,_jquery.default)(document).on("click",SELECTORS.BUTTONS.closeCall,(event=>{closeCallOnClick(event.currentTarget.dataset.chatid)})),(0,_jquery.default)(document).on("click",SELECTORS.BUTTONS.closeChatCall,(event=>{closeCallOnClick(event.currentTarget.dataset.chatid,!0)}))};async function closeCallOnClick(id){let isChat=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const isDeleted=await(0,_tutoring_repository.tutoringMeetingsDelete)({chatid:id});if(isDeleted)if(isChat){const urlParams=new URLSearchParams(window.location.search);urlParams.set("chatid",id),window.location.search=urlParams}else location.reload()}_exports.setEventListeners=setEventListeners;_exports.init=()=>{setEventListeners()}}));

//# sourceMappingURL=google-meet.min.js.map