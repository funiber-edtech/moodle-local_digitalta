define("local_digitalta/commun/translate",["exports","local_digitalta/repositories/translation_repository"],(function(_exports,_translation_repository){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.translateButton=void 0;_exports.translateButton=()=>{const translateButton=document.querySelector(".translate-action");if(!translateButton)return;const translatableContent=document.querySelectorAll(".translatable-content"),translatedButtonIcon=translateButton.querySelector("i");translateButton.addEventListener("click",(async()=>{if("true"===translateButton.dataset.translated){translatableContent.forEach((content=>{content.classList.remove("d-none")}));document.querySelectorAll(".translated-content").forEach((content=>{content.remove()})),translateButton.dataset.translated="false",translateButton.innerHTML="Translate",translateButton.insertAdjacentElement("beforeend",translatedButtonIcon)}else{const promises=[];for(const content of translatableContent){const{response:response}=await(0,_translation_repository.translateContent)({text:content.innerHTML.trim()});promises.push(createElementPromise(content,response))}await Promise.all(promises),translateButton.dataset.translated="true",translateButton.innerHTML="Show original",translateButton.insertAdjacentElement("beforeend",translatedButtonIcon)}}))};const createElementPromise=(translatableContent,text)=>new Promise((resolve=>{const newElement=document.createElement(translatableContent.tagName.toLowerCase());newElement.classList.add("translated-content"),newElement.innerHTML=text,translatableContent.classList.add("d-none"),translatableContent.insertAdjacentElement("afterend",newElement),resolve()}))}));

//# sourceMappingURL=translate.min.js.map