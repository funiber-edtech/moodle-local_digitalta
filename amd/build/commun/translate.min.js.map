{"version":3,"file":"translate.min.js","sources":["../../src/commun/translate.js"],"sourcesContent":["import { translateContent } from \"local_digitalta/repositories/translation_repository\";\n\nimport * as Str from 'core/str';\n\nexport const translateButton = () => {\n  const translateButton = document.querySelector(\".translate-action\");\n  if (!translateButton) {\n    return;\n  }\n  const translatedButtonIcon = translateButton.querySelector(\"i\");\n  translateButton.addEventListener(\"click\", async () => {\n    const translatableContent = document.querySelectorAll(\".translatable-content\");\n    if (translateButton.dataset.translated === \"true\") {\n      translatableContent.forEach((content) => {\n        content.classList.remove(\"d-none\");\n      });\n\n      const translatedContent = document.querySelectorAll(\".translated-content\");\n      translatedContent.forEach((content) => {\n        content.remove();\n      });\n\n      translateButton.dataset.translated = \"false\";\n      translateButton.innerHTML = await Str.get_string('seetranslation', 'local_digitalta');\n      translateButton.insertAdjacentElement(\"beforeend\", translatedButtonIcon);\n    } else {\n      translateButton.dataset.translated = \"true\";\n      const promises = [];\n\n      for (const content of translatableContent) {\n        const { response } = await translateContent({ text: content.innerHTML.trim() });\n        promises.push(createElementPromise(content, response));\n      }\n      await Promise.all(promises);\n      translateButton.innerHTML = await Str.get_string('seeoriginal', 'local_digitalta');\n      translateButton.insertAdjacentElement(\"beforeend\", translatedButtonIcon);\n    }\n  });\n};\n\nconst createElementPromise = (translatableContent, text) => {\n  return new Promise((resolve) => {\n    const newElement = document.createElement(translatableContent.tagName.toLowerCase());\n    newElement.classList.add(\"translated-content\");\n    newElement.innerHTML = text;\n    translatableContent.classList.add(\"d-none\");\n    translatableContent.insertAdjacentElement(\"afterend\", newElement);\n    resolve();\n  });\n};\n"],"names":["translateButton","document","querySelector","translatedButtonIcon","addEventListener","async","translatableContent","querySelectorAll","dataset","translated","forEach","content","classList","remove","innerHTML","Str","get_string","insertAdjacentElement","promises","response","text","trim","push","createElementPromise","Promise","all","resolve","newElement","createElement","tagName","toLowerCase","add"],"mappings":"isCAI+B,WACvBA,gBAAkBC,SAASC,cAAc,yBAC1CF,6BAGCG,qBAAuBH,gBAAgBE,cAAc,KAC3DF,gBAAgBI,iBAAiB,SAASC,gBAClCC,oBAAsBL,SAASM,iBAAiB,4BACX,SAAvCP,gBAAgBQ,QAAQC,WAAuB,CACjDH,oBAAoBI,SAASC,UAC3BA,QAAQC,UAAUC,OAAO,aAGDZ,SAASM,iBAAiB,uBAClCG,SAASC,UACzBA,QAAQE,YAGVb,gBAAgBQ,QAAQC,WAAa,QACrCT,gBAAgBc,gBAAkBC,IAAIC,WAAW,iBAAkB,mBACnEhB,gBAAgBiB,sBAAsB,YAAad,0BAC9C,CACLH,gBAAgBQ,QAAQC,WAAa,aAC/BS,SAAW,OAEZ,MAAMP,WAAWL,oBAAqB,OACnCa,SAAEA,gBAAmB,4CAAiB,CAAEC,KAAMT,QAAQG,UAAUO,SACtEH,SAASI,KAAKC,qBAAqBZ,QAASQ,iBAExCK,QAAQC,IAAIP,UAClBlB,gBAAgBc,gBAAkBC,IAAIC,WAAW,cAAe,mBAChEhB,gBAAgBiB,sBAAsB,YAAad,iCAKnDoB,qBAAuB,CAACjB,oBAAqBc,OAC1C,IAAII,SAASE,gBACZC,WAAa1B,SAAS2B,cAActB,oBAAoBuB,QAAQC,eACtEH,WAAWf,UAAUmB,IAAI,sBACzBJ,WAAWb,UAAYM,KACvBd,oBAAoBM,UAAUmB,IAAI,UAClCzB,oBAAoBW,sBAAsB,WAAYU,YACtDD"}