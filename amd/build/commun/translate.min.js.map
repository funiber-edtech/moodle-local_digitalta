{"version":3,"file":"translate.min.js","sources":["../../src/commun/translate.js"],"sourcesContent":["import { translateContent } from \"local_digitalta/repositories/translation_repository\";\n\nimport * as Str from 'core/str';\n\nexport const translateButton = () => {\n  const translateButton = document.querySelector(\".translate-action\");\n  if (!translateButton) {\n    return;\n  }\n  const translatableContent = document.querySelectorAll(\".translatable-content\");\n  const translatedButtonIcon = translateButton.querySelector(\"i\");\n\n  translateButton.addEventListener(\"click\", async () => {\n    if (translateButton.dataset.translated === \"true\") {\n      translatableContent.forEach((content) => {\n        content.classList.remove(\"d-none\");\n      });\n\n      const translatedContent = document.querySelectorAll(\".translated-content\");\n      translatedContent.forEach((content) => {\n        content.remove();\n      });\n\n      translateButton.dataset.translated = \"false\";\n      translateButton.innerHTML = await Str.get_string('seetranslation', 'local_digitalta');\n      translateButton.insertAdjacentElement(\"beforeend\", translatedButtonIcon);\n    } else {\n      const promises = [];\n\n      for (const content of translatableContent) {\n        const { response } = await translateContent({ text: content.innerHTML.trim() });\n        promises.push(createElementPromise(content, response));\n      }\n      await Promise.all(promises);\n      translateButton.dataset.translated = \"true\";\n      translateButton.innerHTML = await Str.get_string('seeoriginal', 'local_digitalta');\n      translateButton.insertAdjacentElement(\"beforeend\", translatedButtonIcon);\n    }\n  });\n};\n\nconst createElementPromise = (translatableContent, text) => {\n  return new Promise((resolve) => {\n    const newElement = document.createElement(translatableContent.tagName.toLowerCase());\n    newElement.classList.add(\"translated-content\");\n    newElement.innerHTML = text;\n    translatableContent.classList.add(\"d-none\");\n    translatableContent.insertAdjacentElement(\"afterend\", newElement);\n    resolve();\n  });\n};\n"],"names":["translateButton","document","querySelector","translatableContent","querySelectorAll","translatedButtonIcon","addEventListener","async","dataset","translated","forEach","content","classList","remove","innerHTML","Str","get_string","insertAdjacentElement","promises","response","text","trim","push","createElementPromise","Promise","all","resolve","newElement","createElement","tagName","toLowerCase","add"],"mappings":"isCAI+B,WACvBA,gBAAkBC,SAASC,cAAc,yBAC1CF,6BAGCG,oBAAsBF,SAASG,iBAAiB,yBAChDC,qBAAuBL,gBAAgBE,cAAc,KAE3DF,gBAAgBM,iBAAiB,SAASC,aACG,SAAvCP,gBAAgBQ,QAAQC,WAAuB,CACjDN,oBAAoBO,SAASC,UAC3BA,QAAQC,UAAUC,OAAO,aAGDZ,SAASG,iBAAiB,uBAClCM,SAASC,UACzBA,QAAQE,YAGVb,gBAAgBQ,QAAQC,WAAa,QACrCT,gBAAgBc,gBAAkBC,IAAIC,WAAW,iBAAkB,mBACnEhB,gBAAgBiB,sBAAsB,YAAaZ,0BAC9C,OACCa,SAAW,OAEZ,MAAMP,WAAWR,oBAAqB,OACnCgB,SAAEA,gBAAmB,4CAAiB,CAAEC,KAAMT,QAAQG,UAAUO,SACtEH,SAASI,KAAKC,qBAAqBZ,QAASQ,iBAExCK,QAAQC,IAAIP,UAClBlB,gBAAgBQ,QAAQC,WAAa,OACrCT,gBAAgBc,gBAAkBC,IAAIC,WAAW,cAAe,mBAChEhB,gBAAgBiB,sBAAsB,YAAaZ,iCAKnDkB,qBAAuB,CAACpB,oBAAqBiB,OAC1C,IAAII,SAASE,gBACZC,WAAa1B,SAAS2B,cAAczB,oBAAoB0B,QAAQC,eACtEH,WAAWf,UAAUmB,IAAI,sBACzBJ,WAAWb,UAAYM,KACvBjB,oBAAoBS,UAAUmB,IAAI,UAClC5B,oBAAoBc,sBAAsB,WAAYU,YACtDD"}