{"version":3,"file":"reports.min.js","sources":["../../src/reactions/reports.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport { SELECTORS } from \"./selectors\";\r\nimport Notification from \"core/notification\";\r\nimport { saveReport } from \"../repositories/reactions_repository\";\r\n\r\n/**\r\n * Update report button in the UI.\r\n * @param {number} instanceid - The id of the experience.\r\n * @return {void}\r\n */\r\nfunction updateUI(instanceid) {\r\n  const element = $(SELECTORS.BUTTONS.report + SELECTORS.DATA.id(instanceid));\r\n\r\n  if (!element.hasClass(\"active\")) {\r\n      element.addClass(\"active\");\r\n  }\r\n}\r\n\r\n/**\r\n * Toggle the like and dislike buttons.\r\n * @param {number} instanceid - The id of the instance\r\n */\r\nexport function sendReport(instanceid) {\r\n  const isActive = $(SELECTORS.BUTTONS.report + SELECTORS.DATA.id(instanceid)).hasClass(\"active\");\r\n  if (isActive) {\r\n    return;\r\n  }\r\n  const instancetype = $(SELECTORS.BUTTONS.report).data(\"instance\");\r\n\r\n  saveReport({ instancetype, instanceid })\r\n    .then(() => {\r\n      return updateUI(instanceid);\r\n    })\r\n    .fail(Notification.exception);\r\n}\r\n"],"names":["instanceid","SELECTORS","BUTTONS","report","DATA","id","hasClass","instancetype","data","then","element","addClass","updateUI","fail","Notification","exception"],"mappings":"qXAsB2BA,gBACR,mBAAEC,qBAAUC,QAAQC,OAASF,qBAAUG,KAAKC,GAAGL,aAAaM,SAAS,uBAIhFC,cAAe,mBAAEN,qBAAUC,QAAQC,QAAQK,KAAK,iDAE3C,CAAED,aAAAA,aAAcP,WAAAA,aACxBS,MAAK,aApBQT,kBACVU,SAAU,mBAAET,qBAAUC,QAAQC,OAASF,qBAAUG,KAAKC,GAAGL,aAE1DU,QAAQJ,SAAS,WAClBI,QAAQC,SAAS,UAiBVC,CAASZ,cAEjBa,KAAKC,sBAAaC"}