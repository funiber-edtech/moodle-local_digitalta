{"version":3,"file":"comments.min.js","sources":["../../src/reactions/comments.js"],"sourcesContent":["import $ from \"jquery\";\r\nimport Template from \"core/templates\";\r\nimport Notification from \"core/notification\";\r\nimport { SELECTORS } from \"./selectors\";\r\nimport { saveComment, getComments } from \"../repositories/reactions_repository\";\r\n\r\n/**\r\n * Send the comment to the server.\r\n * @return {void}\r\n */\r\nexport function sendComment() {\r\n  const comment = $(SELECTORS.COMMENT_INPUT).val().trim();\r\n  const instanceid = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n  const instancetype = $(SELECTORS.BUTTONS.comment).data(\"instance\");\r\n\r\n  if (comment) {\r\n    saveComment({ instancetype, instanceid, comment })\r\n      .then((response) => {\r\n        if (response.result) {\r\n          return updateUI();\r\n        }\r\n        return Notification.exception(response);\r\n      })\r\n      .fail(Notification.exception);\r\n    $(SELECTORS.COMMENT_INPUT).val(\"\");\r\n  }\r\n}\r\n\r\n/**\r\n * Update the comments in the UI.\r\n * @return {void}\r\n */\r\nexport async function updateUI() {\r\n  const instanceid = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\r\n  const instancetype = $(SELECTORS.BUTTONS.comment).data(\"instance\");\r\n  if (!instanceid) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await getComments({ instanceid, instancetype });\r\n    const comments = response.comments.map((comment) => ({\r\n      comment: comment.comment,\r\n      userfullname: comment.user.fullname,\r\n      userprofileurl: M.cfg.wwwroot + \"/user/profile.php?id=\" + comment.user.id,\r\n    }));\r\n\r\n    const html = await Template.render(\"local_dta/reactions/comments\", { comments });\r\n    $(SELECTORS.COMMENTS_LIST).html(html);\r\n\r\n    $(SELECTORS.ACTIONS.viewComment + SELECTORS.DATA.id(instanceid) + \" span\").text(\r\n      response.comments.length ? response.comments.length : \"\"\r\n    );\r\n  } catch (error) {\r\n    Notification.exception(error);\r\n  }\r\n}\r\n"],"names":["updateUI","instanceid","SELECTORS","ACTIONS","sendComment","data","instancetype","BUTTONS","comment","response","comments","map","userfullname","user","fullname","userprofileurl","M","cfg","wwwroot","id","html","Template","render","COMMENTS_LIST","viewComment","DATA","text","length","error","exception","COMMENT_INPUT","val","trim","then","result","Notification","fail"],"mappings":"4UAgCsBA,iBACdC,YAAa,mBAAEC,qBAAUC,QAAQC,aAAaC,KAAK,MACnDC,cAAe,mBAAEJ,qBAAUK,QAAQC,SAASH,KAAK,eAClDJ,qBAKGQ,eAAiB,qCAAY,CAAER,WAAAA,WAAYK,aAAAA,eAC3CI,SAAWD,SAASC,SAASC,KAAKH,WACtCA,QAASA,QAAQA,QACjBI,aAAcJ,QAAQK,KAAKC,SAC3BC,eAAgBC,EAAEC,IAAIC,QAAU,wBAA0BV,QAAQK,KAAKM,OAGnEC,WAAaC,mBAASC,OAAO,+BAAgC,CAAEZ,SAAAA,+BACnER,qBAAUqB,eAAeH,KAAKA,0BAE9BlB,qBAAUC,QAAQqB,YAActB,qBAAUuB,KAAKN,GAAGlB,YAAc,SAASyB,KACzEjB,SAASC,SAASiB,OAASlB,SAASC,SAASiB,OAAS,IAExD,MAAOC,6BACMC,UAAUD,sGA3CnBpB,SAAU,mBAAEN,qBAAU4B,eAAeC,MAAMC,OAC3C/B,YAAa,mBAAEC,qBAAUC,QAAQC,aAAaC,KAAK,MACnDC,cAAe,mBAAEJ,qBAAUK,QAAQC,SAASH,KAAK,YAEnDG,gDACU,CAAEF,aAAAA,aAAcL,WAAAA,WAAYO,QAAAA,UACrCyB,MAAMxB,UACDA,SAASyB,OACJlC,WAEFmC,sBAAaN,UAAUpB,YAE/B2B,KAAKD,sBAAaN,+BACnB3B,qBAAU4B,eAAeC,IAAI"}