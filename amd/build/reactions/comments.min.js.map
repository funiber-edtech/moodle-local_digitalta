{"version":3,"file":"comments.min.js","sources":["../../src/reactions/comments.js"],"sourcesContent":["import $ from \"jquery\";\nimport Template from \"core/templates\";\nimport Notification from \"core/notification\";\nimport { SELECTORS } from \"./selectors\";\nimport { addComment, getComments } from \"../repositories/reactions_repository\";\n\n/**\n * Send the comment to the server.\n * @return {void}\n */\nexport function sendComment() {\n    const component = $(SELECTORS.BUTTONS.comment).data(\"component\");\n    const componentinstance = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\n    const comment = $(SELECTORS.COMMENT_INPUT).val().trim();\n\n    if (comment) {\n        addComment({ component, componentinstance, comment })\n            .then((response) => {\n                if (response.result) {\n                    return updateUI();\n                }\n                return Notification.exception(response);\n            })\n            .fail(Notification.exception);\n        $(SELECTORS.COMMENT_INPUT).val(\"\");\n    }\n}\n\n/**\n * Update the comments in the UI.\n * @return {void}\n */\nexport async function updateUI() {\n    const component = $(SELECTORS.BUTTONS.comment).data(\"component\");\n    const componentinstance = $(SELECTORS.ACTIONS.sendComment).data(\"id\");\n    if (!componentinstance) {\n        return;\n    }\n\n    try {\n        const response = await getComments({ component, componentinstance });\n        const comments = response.comments.map((comment) => ({\n            comment: comment.comment,\n            userfullname: comment.user.fullname,\n            userprofileurl: M.cfg.wwwroot + \"/user/profile.php?id=\" + comment.user.id,\n        }));\n\n        const html = await Template.render(\"local_dta/reactions/comments\", { comments });\n        $(SELECTORS.COMMENTS_LIST).html(html);\n\n        $(SELECTORS.ACTIONS.viewComment + SELECTORS.DATA.id(componentinstance) + \" span\").text(\n            response.comments.length ? response.comments.length : \"\"\n        );\n    } catch (error) {\n        Notification.exception(error);\n    }\n}\n"],"names":["updateUI","component","SELECTORS","BUTTONS","comment","data","componentinstance","ACTIONS","sendComment","response","comments","map","userfullname","user","fullname","userprofileurl","M","cfg","wwwroot","id","html","Template","render","COMMENTS_LIST","viewComment","DATA","text","length","error","exception","COMMENT_INPUT","val","trim","then","result","Notification","fail"],"mappings":"4UAgCsBA,iBACZC,WAAY,mBAAEC,qBAAUC,QAAQC,SAASC,KAAK,aAC9CC,mBAAoB,mBAAEJ,qBAAUK,QAAQC,aAAaH,KAAK,SAC3DC,4BAKKG,eAAiB,qCAAY,CAAER,UAAAA,UAAWK,kBAAAA,oBAC1CI,SAAWD,SAASC,SAASC,KAAKP,WACpCA,QAASA,QAAQA,QACjBQ,aAAcR,QAAQS,KAAKC,SAC3BC,eAAgBC,EAAEC,IAAIC,QAAU,wBAA0Bd,QAAQS,KAAKM,OAGrEC,WAAaC,mBAASC,OAAO,+BAAgC,CAAEZ,SAAAA,+BACnER,qBAAUqB,eAAeH,KAAKA,0BAE9BlB,qBAAUK,QAAQiB,YAActB,qBAAUuB,KAAKN,GAAGb,mBAAqB,SAASoB,KAC9EjB,SAASC,SAASiB,OAASlB,SAASC,SAASiB,OAAS,IAE5D,MAAOC,6BACQC,UAAUD,sGA3CrB3B,WAAY,mBAAEC,qBAAUC,QAAQC,SAASC,KAAK,aAC9CC,mBAAoB,mBAAEJ,qBAAUK,QAAQC,aAAaH,KAAK,MAC1DD,SAAU,mBAAEF,qBAAU4B,eAAeC,MAAMC,OAE7C5B,+CACW,CAAEH,UAAAA,UAAWK,kBAAAA,kBAAmBF,QAAAA,UACtC6B,MAAMxB,UACCA,SAASyB,OACFlC,WAEJmC,sBAAaN,UAAUpB,YAEjC2B,KAAKD,sBAAaN,+BACrB3B,qBAAU4B,eAAeC,IAAI"}