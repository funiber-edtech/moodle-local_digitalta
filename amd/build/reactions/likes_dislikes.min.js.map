{"version":3,"file":"likes_dislikes.min.js","sources":["../../src/reactions/likes_dislikes.js"],"sourcesContent":["import $ from \"jquery\";\nimport { reactionsToogleLikeAndDislike } from \"local_digitalta/repositories/reactions_repository\";\nimport { SELECTORS } from \"local_digitalta/reactions/selectors\";\nimport Notification from \"core/notification\";\n\n/**\n * Toggle the like and dislike buttons.\n * @param {number} componentinstance - The id of the component.\n * @param {number} reactiontype - The reaction to add. 1 for like, 0 for dislike.\n */\nexport function toggle(componentinstance, reactiontype) {\n    const component = $(SELECTORS.BUTTONS.likes).data(\"component\");\n    reactionsToogleLikeAndDislike({component, componentinstance, reactiontype})\n        .then((response) => {\n            return updateUI(componentinstance, response.likes, response.dislikes, response.reactiontype);\n        })\n        .fail(Notification.exception);\n}\n\n/**\n * Update the like and dislike buttons in the UI.\n * @param {number} componentinstance - The id of the component.\n * @param {number} likes - The number of likes.\n * @param {number} dislikes - The number of dislikes.\n * @param {number} reactiontype - The reaction to add. 1 for like, 0 for dislike.\n * @return {void}\n */\nfunction updateUI(componentinstance, likes, dislikes, reactiontype) {\n    const reactionSelectors = {\n        1: SELECTORS.BUTTONS.likes,\n        0: SELECTORS.BUTTONS.dislikes,\n    };\n\n    $(SELECTORS.BUTTONS.likes + SELECTORS.DATA.id(componentinstance)).removeClass(\"active\");\n    $(SELECTORS.BUTTONS.dislikes + SELECTORS.DATA.id(componentinstance)).removeClass(\"active\");\n\n    if (reactionSelectors.hasOwnProperty(reactiontype) && reactiontype >= 0) {\n        $(reactionSelectors[reactiontype] + SELECTORS.DATA.id(componentinstance)).addClass(\"active\");\n    }\n\n    const likesText = likes ? likes : \"\";\n    $(SELECTORS.DATA.id(componentinstance) + SELECTORS.COUNTS.likes).text(likesText);\n}\n"],"names":["componentinstance","reactiontype","component","SELECTORS","BUTTONS","likes","data","then","response","dislikes","reactionSelectors","DATA","id","removeClass","hasOwnProperty","addClass","likesText","COUNTS","text","updateUI","fail","Notification","exception"],"mappings":"maAUuBA,kBAAmBC,oBAChCC,WAAY,mBAAEC,qBAAUC,QAAQC,OAAOC,KAAK,qEACpB,CAACJ,UAAAA,UAAWF,kBAAAA,kBAAmBC,aAAAA,eACxDM,MAAMC,mBAcGR,kBAAmBK,MAAOI,SAAUR,oBAC5CS,kBAAoB,GACnBP,qBAAUC,QAAQC,QAClBF,qBAAUC,QAAQK,8BAGvBN,qBAAUC,QAAQC,MAAQF,qBAAUQ,KAAKC,GAAGZ,oBAAoBa,YAAY,8BAC5EV,qBAAUC,QAAQK,SAAWN,qBAAUQ,KAAKC,GAAGZ,oBAAoBa,YAAY,UAE7EH,kBAAkBI,eAAeb,eAAiBA,cAAgB,uBAChES,kBAAkBT,cAAgBE,qBAAUQ,KAAKC,GAAGZ,oBAAoBe,SAAS,gBAGjFC,UAAYX,OAAgB,uBAChCF,qBAAUQ,KAAKC,GAAGZ,mBAAqBG,qBAAUc,OAAOZ,OAAOa,KAAKF,WA3BvDG,CAASnB,kBAAmBQ,SAASH,MAAOG,SAASC,SAAUD,SAASP,gBAElFmB,KAAKC,sBAAaC"}