{"version":3,"file":"likes_dislikes.min.js","sources":["../../src/reactions/likes_dislikes.js"],"sourcesContent":["import $ from \"jquery\";\nimport { toogleLikeAndDislike } from \"local_dta/repositories/reactions_repository\";\nimport { SELECTORS } from \"./selectors\";\nimport Notification from \"core/notification\";\n\n/**\n * Toggle the like and dislike buttons.\n * @param {number} componentinstance - The id of the component.\n * @param {number} reactiontype - The reaction to add. 1 for like, 0 for dislike.\n */\nexport function toggle(componentinstance, reactiontype = null) {\n    const component = $(SELECTORS.BUTTONS.likes).data(\"instance\");\n    const reactionSelectors = {\n        1: SELECTORS.BUTTONS.likes,\n        0: SELECTORS.BUTTONS.dislikes,\n    };\n    const isActive = $(reactionSelectors[reactiontype] + SELECTORS.DATA.id(componentinstance)).hasClass(\"active\");\n    reactiontype = isActive ? null : reactiontype;\n    toogleLikeAndDislike({component, componentinstance, reactiontype})\n        .then((response) => {\n            return updateUI(componentinstance, response.likes, response.dislikes, response.reactiontype);\n        })\n        .fail(Notification.exception);\n}\n\n/**\n * Update the like and dislike buttons in the UI.\n * @param {number} componentinstance - The id of the component.\n * @param {number} likes - The number of likes.\n * @param {number} dislikes - The number of dislikes.\n * @param {number} reactiontype - The reaction to add. 1 for like, 0 for dislike.\n * @return {void}\n */\nfunction updateUI(componentinstance, likes, dislikes, reactiontype) {\n    const reactionSelectors = {\n        1: SELECTORS.BUTTONS.likes,\n        0: SELECTORS.BUTTONS.dislikes,\n    };\n\n    $(SELECTORS.BUTTONS.likes + SELECTORS.DATA.id(componentinstance)).removeClass(\"active\");\n    $(SELECTORS.BUTTONS.dislikes + SELECTORS.DATA.id(componentinstance)).removeClass(\"active\");\n\n    if (reactionSelectors.hasOwnProperty(reactiontype) && reactiontype >= 0) {\n        $(reactionSelectors[reactiontype] + SELECTORS.DATA.id(componentinstance)).addClass(\"active\");\n    }\n\n    const likesText = likes ? likes : \"\";\n    $(SELECTORS.DATA.id(componentinstance) + SELECTORS.COUNTS.likes).text(likesText);\n}\n"],"names":["updateUI","componentinstance","likes","dislikes","reactiontype","reactionSelectors","SELECTORS","BUTTONS","DATA","id","removeClass","hasOwnProperty","addClass","likesText","COUNTS","text","component","data","isActive","hasClass","then","response","fail","Notification","exception"],"mappings":"uTAiCSA,SAASC,kBAAmBC,MAAOC,SAAUC,oBAC5CC,kBAAoB,GACnBC,qBAAUC,QAAQL,QAClBI,qBAAUC,QAAQJ,8BAGvBG,qBAAUC,QAAQL,MAAQI,qBAAUE,KAAKC,GAAGR,oBAAoBS,YAAY,8BAC5EJ,qBAAUC,QAAQJ,SAAWG,qBAAUE,KAAKC,GAAGR,oBAAoBS,YAAY,UAE7EL,kBAAkBM,eAAeP,eAAiBA,cAAgB,uBAChEC,kBAAkBD,cAAgBE,qBAAUE,KAAKC,GAAGR,oBAAoBW,SAAS,gBAGjFC,UAAYX,OAAgB,uBAChCI,qBAAUE,KAAKC,GAAGR,mBAAqBK,qBAAUQ,OAAOZ,OAAOa,KAAKF,4FArCnDZ,uBAAmBG,oEAAe,WAC/CY,WAAY,mBAAEV,qBAAUC,QAAQL,OAAOe,KAAK,YAC5CZ,kBAAoB,GACnBC,qBAAUC,QAAQL,QAClBI,qBAAUC,QAAQJ,UAEnBe,UAAW,mBAAEb,kBAAkBD,cAAgBE,qBAAUE,KAAKC,GAAGR,oBAAoBkB,SAAS,UACpGf,aAAec,SAAW,KAAOd,4DACZ,CAACY,UAAAA,UAAWf,kBAAAA,kBAAmBG,aAAAA,eAC/CgB,MAAMC,UACIrB,SAASC,kBAAmBoB,SAASnB,MAAOmB,SAASlB,SAAUkB,SAASjB,gBAElFkB,KAAKC,sBAAaC"}