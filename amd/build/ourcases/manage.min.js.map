{"version":3,"file":"manage.min.js","sources":["../../src/ourcases/manage.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport {sectionTextUpsert, sectionTextDelete, ourcaseEdit} from 'local_dta/repositories/ourcasesRepository';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport {get_string} from 'core/str';\r\nimport {getTinyMCE} from 'editor_tiny/loader';\r\n\r\nlet sectionTextModal;\r\nlet tinymce;\r\n\r\n/**\r\n * Add a new text section to the page.\r\n * @return {void}\r\n */\r\nfunction addTextSection() {\r\n    Templates.render('local_dta/cases/section-text-edit', {\r\n        id: new Date().getTime(),\r\n        description: null,\r\n        exist: true\r\n    }).then((html) => {\r\n        $('#sections-body').append(html);\r\n        const id = $('.card-body:has(textarea)').last().find('textarea').attr('id');\r\n        return createTinyMCE(id);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @return {void}\r\n * */\r\nfunction changeSectionHeaderToEdit(toView = false) {\r\n    const id = $('#section-header-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const description = $('#section-header-description').val();\r\n    const template = toView ? 'local_dta/cases/section-header-edit' : 'local_dta/cases/section-header-view';\r\n    Templates.render(template,\r\n     {sectionheader: {id, title, description}}).then((html) => {\r\n        return $('#sections-header').html(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @param {number} id - The id of the section to change.\r\n * @return {void}\r\n */\r\nfunction changeSectionToEdit(toView = false, id) {\r\n    const description = toView ? $(`#content_${id}`).html() : $(`#content_${id}`).val();\r\n    const template = toView ? 'local_dta/cases/section-text-edit' : 'local_dta/cases/section-text-view';\r\n    Templates.render(template,\r\n     {id, description}).then((html) => {\r\n        return $(`#section_${id}`).replaceWith(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {number} id - The id of the section to change.\r\n * @param {number} toId - The id of the section to change to.\r\n * @return {void}\r\n */\r\nfunction changeSectionToNewId(id, toId) {\r\n    const description = $(`#content_${id}`).val();\r\n    Templates.render(\"local_dta/cases/section-text-view\",\r\n        {id: toId, description, exist: true}).then((html) => {\r\n           return $(`#section_${id}`).replaceWith(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n *\r\n */\r\nfunction upsertHeaderSection() {\r\n    const sectionid = $('#section-header-id').val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const text = $('#section-header-description').val();\r\n    const sequence = 0;\r\n    sectionTextUpsert({ourcaseid, sectionid, title, text, sequence});\r\n    changeSectionHeaderToEdit();\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @param {number} id - The id of the section to remove.\r\n * @return {void}\r\n *\r\n */\r\nfunction upsertSection(id) {\r\n    const sectionid = $(`#not_exist_${id}`).val() ? null : $(`#sectionid_${id}`).val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const title = null;\r\n    const text = $(`#content_${id}`).val();\r\n    const sequence = -1;\r\n\r\n    return sectionTextUpsert({ourcaseid, sectionid, title, text, sequence})\r\n        .then((data) => {\r\n            if (data && data.result) {\r\n                changeSectionToNewId(id, data.sectionid);\r\n                return data;\r\n            } else {\r\n                throw new Error('No se pudo realizar la actualización de la sección.');\r\n            }\r\n        })\r\n        .fail(() => {\r\n            throw new Error('Hubo un error al realizar la solicitud: ');\r\n        });\r\n}\r\n\r\n\r\n/**\r\n * Remove a section from the page.\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nfunction removeSection(sectionid) {\r\n    if ($(`#not_exist_${sectionid}`).val()) {\r\n        if (sectionid) {\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n    } else {\r\n        changeSectionToEdit(false, sectionid);\r\n    }\r\n}\r\n\r\n/**\r\n * Show the delete section modal\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nasync function showDeleteSectionModal(sectionid) {\r\n    sectionTextModal = await ModalFactory.create({\r\n        title: get_string(\"ourcases_section_text_delete_modal_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/section-text-modal', {modalDeleteId: sectionid}),\r\n    });\r\n    $(\"#modal_delete_id\").val();\r\n    sectionTextModal.show();\r\n}\r\n\r\n/**\r\n * Show save case modal\r\n * @return {void}\r\n */\r\nasync function showSaveCase() {\r\n    const button = $('#header-edit-button')[0];\r\n    const button2 = $('#section-edit-button')[0];\r\n    const saveModal = await ModalFactory.create({\r\n        title: get_string(\"ourcases_modal_save_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/manage-save-modal', {\r\n            havePendingChanges: (button || button2) ? true : false,\r\n        }),\r\n    });\r\n    saveModal.show();\r\n}\r\n\r\n\r\n/**\r\n * Delete text section\r\n * @return {void}\r\n */\r\nfunction deleteSection() {\r\n    const sectionid = $(\"#modal_delete_id\").val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n\r\n    sectionTextDelete({ourcaseid, sectionid}).then((data) => {\r\n        if (data.result) {\r\n            sectionTextModal.hide();\r\n            sectionTextModal = null;\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Edit a case.\r\n * @return {void}\r\n */\r\nfunction changeStatusToComplete() {\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const status = 1;\r\n    const args = {ourcaseid, status};\r\n\r\n    ourcaseEdit(args).then((data) => {\r\n        if (data.result) {\r\n            window.location.href = '/local/dta/pages/cases/repository.php';\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Remove tinyMCE from an area.\r\n * @param {string} area - The id of the area to remove tinyMCE from.\r\n * @return {void}\r\n */\r\nfunction removeTinyMCEFromArea(area) {\r\n    tinymce.get(area).remove();\r\n}\r\n\r\n/**\r\n * Create tinyMCE in an area.\r\n * @param {string} area - The id of the area to create tinyMCE in.\r\n * @return {void}\r\n */\r\nfunction createTinyMCE(area) {\r\n    setTimeout(() => {\r\n      tinymce.init({\r\n        selector: `textarea#${area}`,\r\n        plugins: \"image , table\",\r\n      });\r\n    }, 200);\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n * */\r\nfunction setEventListeners() {\r\n    // Add a new text section\r\n    $(document).on('click', '#add-section', () => {\r\n        addTextSection();\r\n    });\r\n    // Edit the header\r\n    $(document).on('click', '#header-edit-button', () => {\r\n        upsertHeaderSection();\r\n        removeTinyMCEFromArea('section-header-description');\r\n    });\r\n    // Change the header section to edit mode\r\n    $(document).on('click', '#header-to-edit-button', () => {\r\n        changeSectionHeaderToEdit(true);\r\n        createTinyMCE('section-header-description');\r\n    });\r\n    // Change the header section to view mode withour editing\r\n    $(document).on('click', '#header-edit-close-button', () => {\r\n        changeSectionHeaderToEdit();\r\n        removeTinyMCEFromArea('section-header-description');\r\n    });\r\n    // Remove a section\r\n    $(document).on('click', '.section-close-button', function() {\r\n        const id = $(this).data('id');\r\n        removeSection(id);\r\n        removeTinyMCEFromArea(`content_${id}`);\r\n    });\r\n    // Edit the section\r\n    $(document).on('click', '.section-edit-button', function() {\r\n        const id = $(this).data('id');\r\n        upsertSection(id);\r\n        removeTinyMCEFromArea(`content_${id}`);\r\n    });\r\n    // Change the section to edit mode\r\n    $(document).on('click', '.section-to-edit-button', function() {\r\n        changeSectionToEdit(true, $(this).data('id'));\r\n        const id = $(this).data('id');\r\n        createTinyMCE(`content_${id}`);\r\n    });\r\n    // Showt section delete modal\r\n    $(document).on('click', '.section-delete-button', function() {\r\n        showDeleteSectionModal($(this).data('id'));\r\n    });\r\n    // Delete section\r\n    $(document).on('click', '#confirmDelete', function() {\r\n        deleteSection();\r\n    });\r\n    // Save button\r\n    $(document).on('click', '#save-case-button', function() {\r\n        showSaveCase();\r\n    });\r\n    // Change status to complete\r\n    $(document).on('click', '#complete-case-button', function() {\r\n        changeStatusToComplete();\r\n    });\r\n\r\n}\r\n\r\n\r\n/**\r\n * Initialize the module.\r\n * @return {void}\r\n */\r\nexport const init = async() => {\r\n    setEventListeners();\r\n    tinymce = await getTinyMCE();\r\n    setTimeout(() => {\r\n        tinymce.init({\r\n            selector: 'textarea#section-header-description',\r\n              plugins: 'image , table',\r\n        });\r\n    }, 200);\r\n};"],"names":["sectionTextModal","tinymce","changeSectionHeaderToEdit","toView","id","val","title","description","template","render","sectionheader","then","html","fail","Notification","exception","changeSectionToEdit","replaceWith","upsertSection","sectionid","ourcaseid","text","sequence","data","result","toId","exist","changeSectionToNewId","Error","removeTinyMCEFromArea","area","get","remove","createTinyMCE","setTimeout","init","selector","plugins","setEventListeners","document","on","Date","getTime","append","last","find","attr","upsertHeaderSection","this","ModalFactory","create","body","Templates","modalDeleteId","show","showDeleteSectionModal","hide","deleteSection","button","button2","havePendingChanges","showSaveCase","args","status","window","location","href","changeStatusToComplete","async"],"mappings":"yXAQIA,iBACAC,iBAuBKC,gCAA0BC,qEACzBC,IAAK,mBAAE,sBAAsBC,MAC7BC,OAAQ,mBAAE,yBAAyBD,MACnCE,aAAc,mBAAE,+BAA+BF,MAC/CG,SAAWL,OAAS,sCAAwC,yDACxDM,OAAOD,SAChB,CAACE,cAAe,CAACN,GAAAA,GAAIE,MAAAA,MAAOC,YAAAA,eAAeI,MAAMC,OACvC,mBAAE,oBAAoBA,KAAKA,QACnCC,KAAKC,sBAAaC,oBAUhBC,0BAAoBb,+DAAgBC,gDACnCG,YAAcJ,QAAS,sCAAcC,KAAMQ,QAAS,sCAAcR,KAAMC,MACxEG,SAAWL,OAAS,oCAAsC,uDACtDM,OAAOD,SAChB,CAACJ,GAAAA,GAAIG,YAAAA,cAAcI,MAAMC,OACf,sCAAcR,KAAMa,YAAYL,QACxCC,KAAKC,sBAAaC,oBAwChBG,cAAcd,UACbe,WAAY,wCAAgBf,KAAMC,MAAQ,MAAO,wCAAgBD,KAAMC,MACvEe,WAAY,mBAAE,gBAAgBf,MAE9BgB,MAAO,sCAAcjB,KAAMC,aAG1B,yCAAkB,CAACe,UAAAA,UAAWD,UAAAA,UAAWb,MAJlC,KAIyCe,KAAAA,KAAMC,UAF3C,IAGbX,MAAMY,UACCA,MAAQA,KAAKC,uBAvCCpB,GAAIqB,YACxBlB,aAAc,sCAAcH,KAAMC,yBAC9BI,OAAO,oCACb,CAACL,GAAIqB,KAAMlB,YAAAA,YAAamB,OAAO,IAAOf,MAAMC,OAClC,sCAAcR,KAAMa,YAAYL,QAC3CC,KAAKC,sBAAaC,WAmCTY,CAAqBvB,GAAImB,KAAKJ,WACvBI,WAED,IAAIK,MAAM,0DAGvBf,MAAK,WACI,IAAIe,MAAM,wDA2FnBC,sBAAsBC,MAC3B7B,QAAQ8B,IAAID,MAAME,kBAQbC,cAAcH,MACnBI,YAAW,KACTjC,QAAQkC,KAAK,CACXC,4BAAsBN,MACtBO,QAAS,oBAEV,cAOEC,wCAEHC,UAAUC,GAAG,QAAS,gBAAgB,wBApN9B/B,OAAO,oCAAqC,CAClDL,IAAI,IAAIqC,MAAOC,UACfnC,YAAa,KACbmB,OAAO,IACRf,MAAMC,2BACH,kBAAkB+B,OAAO/B,MAEpBqB,eADI,mBAAE,4BAA4BW,OAAOC,KAAK,YAAYC,KAAK,UAEvEjC,KAAKC,sBAAaC,kCAgNnBwB,UAAUC,GAAG,QAAS,uBAAuB,uBAvJzCrB,WAAY,mBAAE,sBAAsBd,MACpCe,WAAY,mBAAE,gBAAgBf,MAC9BC,OAAQ,mBAAE,yBAAyBD,MACnCgB,MAAO,mBAAE,+BAA+BhB,gDAE5B,CAACe,UAAAA,UAAWD,UAAAA,UAAWb,MAAAA,MAAOe,KAAAA,KAAMC,SADrC,IAEjBpB,4BAkJI6C,GACAlB,sBAAsB,qDAGxBU,UAAUC,GAAG,QAAS,0BAA0B,KAC9CtC,2BAA0B,GAC1B+B,cAAc,qDAGhBM,UAAUC,GAAG,QAAS,6BAA6B,KACjDtC,4BACA2B,sBAAsB,qDAGxBU,UAAUC,GAAG,QAAS,yBAAyB,iBACvCpC,IAAK,mBAAE4C,MAAMzB,KAAK,UA7HTJ,UAAAA,UA8HDf,IA7Hd,wCAAgBe,YAAad,MACzBc,kDACcA,YAAaa,SAG/BhB,qBAAoB,EAAOG,WAyH3BU,wCAAiCzB,4BAGnCmC,UAAUC,GAAG,QAAS,wBAAwB,iBACtCpC,IAAK,mBAAE4C,MAAMzB,KAAK,MACxBL,cAAcd,IACdyB,wCAAiCzB,4BAGnCmC,UAAUC,GAAG,QAAS,2BAA2B,WAC/CxB,qBAAoB,GAAM,mBAAEgC,MAAMzB,KAAK,aACjCnB,IAAK,mBAAE4C,MAAMzB,KAAK,MACxBU,gCAAyB7B,4BAG3BmC,UAAUC,GAAG,QAAS,0BAA0B,2BA/HhBrB,WAClCnB,uBAAyBiD,uBAAaC,OAAO,CACzC5C,OAAO,mBAAW,2CAA4C,aAC9D6C,KAAMC,mBAAU3C,OAAO,qCAAsC,CAAC4C,cAAelC,kCAE/E,oBAAoBd,MACtBL,iBAAiBsD,OA0HbC,EAAuB,mBAAEP,MAAMzB,KAAK,8BAGtCgB,UAAUC,GAAG,QAAS,kBAAkB,6BApGpCrB,WAAY,mBAAE,oBAAoBd,MAClCe,WAAY,mBAAE,gBAAgBf,gDAElB,CAACe,UAAAA,UAAWD,UAAAA,YAAYR,MAAMY,OACxCA,KAAKC,SACLxB,iBAAiBwD,OACjBxD,iBAAmB,4CACLmB,YAAaa,aAGhCnB,KAAKC,sBAAaC,WA2FjB0C,0BAGFlB,UAAUC,GAAG,QAAS,qBAAqB,mCAzHvCkB,QAAS,mBAAE,uBAAuB,GAClCC,SAAU,mBAAE,wBAAwB,UAClBV,uBAAaC,OAAO,CACxC5C,OAAO,mBAAW,4BAA6B,aAC/C6C,KAAMC,mBAAU3C,OAAO,oCAAqC,CACxDmD,sBAAqBF,SAAUC,cAG7BL,OAkHNO,0BAGFtB,UAAUC,GAAG,QAAS,yBAAyB,6BAxF3CsB,KAAO,CAAC1C,WAFI,mBAAE,gBAAgBf,MAEX0D,OADV,uCAGHD,MAAMnD,MAAMY,OAChBA,KAAKC,SACLwC,OAAOC,SAASC,KAAO,4CAG5BrD,KAAKC,sBAAaC,WAkFjBoD,iSAUYC,UAChB9B,oBACArC,cAAgB,wBAChBiC,YAAW,KACPjC,QAAQkC,KAAK,CACTC,SAAU,sCACRC,QAAS,oBAEhB"}