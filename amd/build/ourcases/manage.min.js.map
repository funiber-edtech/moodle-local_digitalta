{"version":3,"file":"manage.min.js","sources":["../../src/ourcases/manage.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport {\r\n    sectionTextUpsert,\r\n    sectionTextDelete,\r\n    ourcaseEdit\r\n} from 'local_dta/repositories/ourcasesRepository';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport {get_string} from 'core/str';\r\nimport {getTinyMCE} from 'editor_tiny/loader';\r\n\r\nlet sectionTextModal;\r\nlet tinymce;\r\n// eslint-disable-next-line no-unused-vars\r\nlet tinyConfig;\r\nlet urlView = null;\r\n\r\n/**\r\n * Add a new text section to the page.\r\n * @return {void}\r\n */\r\nfunction addTextSection() {\r\n    Templates.render('local_dta/cases/section-text-edit', {\r\n        id: new Date().getTime(),\r\n        description: null,\r\n        exist: true\r\n    }).then((html) => {\r\n        $('#sections-body').append(html);\r\n        createTinyMCE($('.card-body:has(textarea)').last().find('textarea').attr('id'));\r\n        window.scrollTo(0, document.body.scrollHeight);\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @return {void}\r\n * */\r\nfunction changeSectionHeaderToEdit(toView = false) {\r\n    const id = $('#section-header-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const description = toView ? $('#section-header-description').val() : getTinyMCEContent('section-header-description');\r\n    const template = toView ? 'local_dta/cases/section-header-edit' : 'local_dta/cases/section-header-view';\r\n    Templates.render(template,\r\n     {sectionheader: {id, title, description}}).then((html) => {\r\n        return $('#sections-header').html(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @param {number} id - The id of the section to change.\r\n * @return {void}\r\n */\r\nfunction changeSectionToEdit(toView = false, id) {\r\n    const description = toView ? $(`#content_${id}`).html() : $(`#content_${id}`).val();\r\n    const template = toView ? 'local_dta/cases/section-text-edit' : 'local_dta/cases/section-text-view';\r\n    Templates.render(template,\r\n     {id, description}).then((html) => {\r\n        return $(`#section_${id}`).replaceWith(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {number} id - The id of the section to change.\r\n * @param {number} toId - The id of the section to change to.\r\n * @return {void}\r\n */\r\nfunction changeSectionToNewId(id, toId) {\r\n    const description = $(`#content_${id}`).val();\r\n    Templates.render(\"local_dta/cases/section-text-view\",\r\n        {id: toId, description, exist: true}).then((html) => {\r\n           return $(`#section_${id}`).replaceWith(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n *\r\n */\r\nfunction upsertHeaderSection() {\r\n    const sectionid = $('#section-header-id').val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const text = getTinyMCEContent('section-header-description');\r\n    const sequence = 0;\r\n    sectionTextUpsert({ourcaseid, sectionid, title, text, sequence});\r\n    changeSectionHeaderToEdit();\r\n    removeTinyMCEFromArea('section-header-description');\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @param {number} id - The id of the section to remove.\r\n * @return {void}\r\n *\r\n */\r\nfunction upsertSection(id) {\r\n    const sectionid = $(`#not_exist_${id}`).val() ? null : $(`#sectionid_${id}`).val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const title = null;\r\n    const text = $(`#content_${id}`).val();\r\n    const sequence = -1;\r\n\r\n    return sectionTextUpsert({ourcaseid, sectionid, title, text, sequence})\r\n        .then((data) => {\r\n            if (data && data.result) {\r\n                changeSectionToNewId(id, data.sectionid);\r\n                return data;\r\n            } else {\r\n                throw new Error('No se pudo realizar la actualización de la sección.');\r\n            }\r\n        })\r\n        .fail(() => {\r\n            throw new Error('Hubo un error al realizar la solicitud: ');\r\n        });\r\n}\r\n\r\n\r\n/**\r\n * Remove a section from the page.\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nfunction removeSection(sectionid) {\r\n    if ($(`#not_exist_${sectionid}`).val()) {\r\n        if (sectionid) {\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n    } else {\r\n        changeSectionToEdit(false, sectionid);\r\n    }\r\n}\r\n\r\n/**\r\n * Show the delete section modal\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nasync function showDeleteSectionModal(sectionid) {\r\n    sectionTextModal = await ModalFactory.create({\r\n        title: get_string(\"ourcases_section_text_delete_modal_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/section-text-modal', {modalDeleteId: sectionid}),\r\n    });\r\n    $(\"#modal_delete_id\").val();\r\n    sectionTextModal.show();\r\n}\r\n\r\n/**\r\n * Show save case modal\r\n * @return {void}\r\n */\r\nasync function showSaveCase() {\r\n    const button = $('#header-edit-button')[0];\r\n    const button2 = $('#section-edit-button')[0];\r\n    const saveModal = await ModalFactory.create({\r\n        title: get_string(\"ourcases_modal_save_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/manage-save-modal', {\r\n            havePendingChanges: (button || button2) ? true : false,\r\n        }),\r\n    });\r\n    saveModal.show();\r\n}\r\n\r\n\r\n/**\r\n * Delete text section\r\n * @return {void}\r\n */\r\nfunction deleteSection() {\r\n    const sectionid = $(\"#modal_delete_id\").val();\r\n    const ourcaseid = $('#ourcases-id').val();\r\n\r\n    sectionTextDelete({ourcaseid, sectionid}).then((data) => {\r\n        if (data.result) {\r\n            sectionTextModal.hide();\r\n            sectionTextModal = null;\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Edit a case.\r\n * @return {void}\r\n */\r\nfunction changeStatusToComplete() {\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const status = 1;\r\n    const args = {ourcaseid, status};\r\n\r\n    ourcaseEdit(args).then((data) => {\r\n        if (data.result) {\r\n            window.location.href = urlView;\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Remove tinyMCE from an area.\r\n * @param {string} area - The id of the area to remove tinyMCE from.\r\n * @return {void}\r\n */\r\nfunction removeTinyMCEFromArea(area) {\r\n    tinymce.get(area).remove();\r\n}\r\n\r\n/**\r\n * Remove tinyMCE from an area.\r\n * @param {string} area - The id of the area to remove tinyMCE from.\r\n * @returns {string} The content of the tinyMCE area.\r\n */\r\nfunction getTinyMCEContent(area) {\r\n    return tinymce.get(area).getContent();\r\n}\r\n\r\n/**\r\n * Create tinyMCE in an area.\r\n * @param {string} area - The id of the area to create tinyMCE in.\r\n * @return {void}\r\n */\r\nfunction createTinyMCE(area) {\r\n    setTimeout(() => {\r\n      tinymce.init({\r\n        selector: `textarea#${area}`,\r\n        plugins: \"image , table\",\r\n      });\r\n    }, 200);\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n * */\r\nfunction setEventListeners() {\r\n    // Add a new text section\r\n    $(document).on('click', '#add-section', () => {\r\n        addTextSection();\r\n    });\r\n    // Edit the header\r\n    $(document).on('click', '#header-edit-button', () => {\r\n        upsertHeaderSection();\r\n    });\r\n    // Change the header section to edit mode\r\n    $(document).on('click', '#header-to-edit-button', () => {\r\n        changeSectionHeaderToEdit(true);\r\n        createTinyMCE('section-header-description');\r\n    });\r\n    // Change the header section to view mode withour editing\r\n    $(document).on('click', '#header-edit-close-button', () => {\r\n        changeSectionHeaderToEdit();\r\n        removeTinyMCEFromArea('section-header-description');\r\n    });\r\n    // Remove a section\r\n    $(document).on('click', '.section-close-button', function() {\r\n        const id = $(this).data('id');\r\n        removeSection(id);\r\n        removeTinyMCEFromArea(`content_${id}`);\r\n    });\r\n    // Edit the section\r\n    $(document).on('click', '.section-edit-button', function() {\r\n        const id = $(this).data('id');\r\n        upsertSection(id);\r\n        removeTinyMCEFromArea(`content_${id}`);\r\n    });\r\n    // Change the section to edit mode\r\n    $(document).on('click', '.section-to-edit-button', function() {\r\n        changeSectionToEdit(true, $(this).data('id'));\r\n        const id = $(this).data('id');\r\n        createTinyMCE(`content_${id}`);\r\n    });\r\n    // Showt section delete modal\r\n    $(document).on('click', '.section-delete-button', function() {\r\n        showDeleteSectionModal($(this).data('id'));\r\n    });\r\n    // Delete section\r\n    $(document).on('click', '#confirmDelete', function() {\r\n        deleteSection();\r\n    });\r\n    // Save button\r\n    $(document).on('click', '#save-case-button', function() {\r\n        showSaveCase();\r\n    });\r\n    // Change status to complete\r\n    $(document).on('click', '#complete-case-button', function() {\r\n        changeStatusToComplete();\r\n    });\r\n\r\n}\r\n\r\n\r\n/**\r\n * Initialize the module.\r\n * @param {string} dataUrlView - The url to redirect to after completing the case.\r\n * @return {void}\r\n */\r\nexport const init = async(dataUrlView) => {\r\n    setEventListeners();\r\n    tinymce = await getTinyMCE();\r\n    createTinyMCE('section-header-description');\r\n    urlView = dataUrlView;\r\n};"],"names":["sectionTextModal","tinymce","urlView","changeSectionHeaderToEdit","toView","id","val","title","description","getTinyMCEContent","template","render","sectionheader","then","html","fail","Notification","exception","changeSectionToEdit","replaceWith","upsertSection","sectionid","ourcaseid","text","sequence","data","result","toId","exist","changeSectionToNewId","Error","removeTinyMCEFromArea","area","get","remove","getContent","createTinyMCE","setTimeout","init","selector","plugins","setEventListeners","document","on","Date","getTime","append","last","find","attr","window","scrollTo","body","scrollHeight","upsertHeaderSection","this","ModalFactory","create","Templates","modalDeleteId","show","showDeleteSectionModal","hide","deleteSection","button","button2","havePendingChanges","showSaveCase","args","status","location","href","changeStatusToComplete","async","dataUrlView"],"mappings":"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"}