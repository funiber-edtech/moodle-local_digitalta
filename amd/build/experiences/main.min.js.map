{"version":3,"file":"main.min.js","sources":["../../src/experiences/main.js"],"sourcesContent":["import Notification from \"core/notification\";\r\nimport ModalFactory from 'core/modal_factory';\r\nimport Templates from 'core/templates';\r\nimport {get_string} from 'core/str';\r\nimport {toggleStatus} from 'local_dta/repositories/experiences_repository';\r\nimport {setEventListeners} from './listeners';\r\nimport {deleteContext} from 'local_dta/repositories/context_repository';\r\n\r\nlet changeStatusModal = null;\r\n\r\n// Selectors\r\nexport const SELECTORS = {\r\n    BUTTONS: {\r\n        edit: '#edit-experience-button',\r\n        block: '#block-experience-button',\r\n        unblock: '#open-experience-button',\r\n        confirmBlockModal: '#confirm-block-experience-button',\r\n        addResourceBtn: '#add-resource-button',\r\n        addCasesBtn: \"#add-cases-button\",\r\n        removeContextButton: \"#remove-context-button\",\r\n        sendMentorRequest: \"#send-mentor-request\",\r\n    },\r\n    INPUTS: {\r\n        experienceid: '#experience-id',\r\n        mentorsSearch: '#search-mentors-input',\r\n    },\r\n    SECTIONS : {\r\n        searchMentorsResults: '#search-mentors-result',\r\n    }\r\n};\r\n\r\n/**\r\n * Show the delete section modal\r\n * @param {int} experienceid\r\n * @return {void}\r\n */\r\nexport async function showChangeStatusModal(experienceid) {\r\n    changeStatusModal = await ModalFactory.create({\r\n        title: get_string(\"experience_view_block_modal_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/experiences/view/open-close-modal', {experienceid}),\r\n    });\r\n    changeStatusModal.show();\r\n}\r\n\r\n/**\r\n * Toggle the status of an experience\r\n * @param {int} experienceid\r\n * @return {void}\r\n */\r\nexport async function toggleExperienceStatus(experienceid) {\r\n    try {\r\n        await toggleStatus(experienceid);\r\n        changeStatusModal.hide();\r\n        window.location.reload();\r\n        return;\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n}\r\n\r\n/**\r\n * Display the link resources modal\r\n * @param {int} contextid  The context id.\r\n */\r\nexport async function deleteRelatedContext(contextid) {\r\n    try {\r\n        await deleteContext({id: contextid});\r\n        window.location.reload();\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n}\r\n\r\nexport const init = () => {\r\n    setEventListeners();\r\n};\r\n"],"names":["contextid","id","window","location","reload","error","exception","experienceid","changeStatusModal","ModalFactory","create","title","body","Templates","render","show","hide","BUTTONS","edit","block","unblock","confirmBlockModal","addResourceBtn","addCasesBtn","removeContextButton","sendMentorRequest","INPUTS","mentorsSearch","SECTIONS","searchMentorsResults"],"mappings":"wiBAgE2CA,qBAE7B,qCAAc,CAACC,GAAID,YACzBE,OAAOC,SAASC,SAClB,MAAOC,6BACQC,UAAUD,4EAjCaE,cACxCC,wBAA0BC,uBAAaC,OAAO,CAC1CC,OAAO,mBAAW,oCAAqC,aACvDC,KAAMC,mBAAUC,OAAO,8CAA+C,CAACP,aAAAA,iBAE3EC,kBAAkBO,uDAQuBR,+BAE/B,wCAAaA,cACnBC,kBAAkBQ,YAClBd,OAAOC,SAASC,SAElB,MAAOC,6BACQC,UAAUD,qKAhD3BG,kBAAoB,wBAGC,CACrBS,QAAS,CACLC,KAAM,0BACNC,MAAO,2BACPC,QAAS,0BACTC,kBAAmB,mCACnBC,eAAgB,uBAChBC,YAAa,oBACbC,oBAAqB,yBACrBC,kBAAmB,wBAEvBC,OAAQ,CACJnB,aAAc,iBACdoB,cAAe,yBAEnBC,SAAW,CACPC,qBAAsB,yCA8CV"}