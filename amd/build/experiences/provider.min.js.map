{"version":3,"file":"provider.min.js","sources":["../../src/experiences/provider.js"],"sourcesContent":["import {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\nimport $ from 'jquery';\nimport Ajax from 'core/ajax';\nlet pages = 0;\n\nlet filters = [];\nlet selectedPage = 1;\nexport const init = () => {\n    getAndRenderFilters();\n    getExperiences();\n\n    $('.dropdown-menu').on('click', function(e) {\n        e.stopPropagation();\n    });\n\n    $(document).on(\"click\", \"li.page-item.page-link.page\", function() {\n        const clickedPage = $(this).attr('attr-page');\n        if (selectedPage !== clickedPage) {\n            selectedPage = parseInt(clickedPage);\n            getExperiences();\n        }\n    });\n    $(document).on(\"click\", \"li.page-item.page-link.state\", function() {\n        const state = $(this).attr('aria-label');\n        if (state === 'Next') {\n            const posibleNextPage = selectedPage + 1;\n            if (posibleNextPage > 0 && posibleNextPage <= pages) {\n                selectedPage++;\n                getExperiences();\n            }\n        } else if (state === 'Previous') {\n            const posiblePreviousPage = selectedPage - 1;\n            if (posiblePreviousPage > 0 && posiblePreviousPage <= pages) {\n                selectedPage--;\n                getExperiences();\n            }\n        }\n    });\n\n    $(document).on(\"change\", \".filterThemeSelect\", function() {\n        const selectedValue = $(\"option:selected.enable\", this).val();\n        const selectedText = $(\"option:selected.enable\", this).text();\n        if (selectedText.length > 0) {\n            const element = $(\"option:selected.enable\", this);\n            element.addClass('disabled');\n            element.removeClass('enable');\n            const filterObject = {\"type\": \"theme\", \"value\": {id: selectedValue, name: selectedText}};\n            setFilter(filterObject);\n            $(\".filterThemeSelect option:first\").prop(\"selected\", true);\n            $(element).prop('disabled', true);\n        }\n    });\n\n    $(document).on(\"change\", \".filterLanguageSelect\", function() {\n        const selectedText = $(\"option:selected.enable\", this).text();\n        if (selectedText.length > 0) {\n            const element = $(\"option:selected.enable\", this);\n            element.addClass('disabled');\n            element.removeClass('enable');\n            const filterObject = {\"type\": \"language\", \"value\": selectedText};\n            setFilter(filterObject);\n            $(\".filterLanguageSelect option:first\").prop(\"selected\", true);\n            $(element).prop('disabled', true);\n        }\n    });\n\n    $(document).on(\"keydown\", \"#inlineFormInputGroup\", function(event) {\n        // Verificamos si la tecla Enter fue presionada (keyCode 13 o event.which 13)\n        if (event.key === \"Enter\" || event.keyCode === 13) {\n            const filterText = $(this).val(); // Obtenemos el valor del input\n            const filterObject = {\"type\": \"tag\", \"value\": filterText};\n            setFilter(filterObject);\n            $(this).val(''); // Limpiamos el input\n        }\n    });\n\n    $(document).on(\"keydown\", \"#authorFilters\", async function() {\n        const filterText = $(this).val(); // Obtenemos el valor del input\n        const request = {\n            methodname: 'core_enrol_get_potential_users',\n            args: {courseid: 1, enrolid: 1, page: 0, perpage: 10, search: filterText, searchanywhere: true}\n        };\n        const response = await Ajax.call([request])[0];\n\n        if (response.length === 0) {\n            $(\"#suggestionsAuthors\").empty();\n        } else {\n            const authorsSuggestions = await Templates.renderForPromise('local_digitalta/_common/listAuthors', {users: response});\n            Templates.replaceNodeContents(\"#suggestionsAuthors\", authorsSuggestions.html, authorsSuggestions.js);\n        }\n    });\n\n    $(\"#suggestionsTags\").on(\"click\", \".tag-item\", function() {\n        const filterText = {type: \"tag\", value: $(this).attr('attr-name')};\n        setFilter(filterText);\n        $(\"#inlineFormInputGroup\").val(\"\");\n    });\n\n    $(\"#suggestionsAuthors\").on(\"click\", \".author-item\", function() {\n        const filterText = {type: \"author\", value: {id: $(this).attr('attr-id-user'), name: $(this).attr('attr-name')}};\n        setFilter(filterText);\n        $(\"#authorFilters\").val(\"\");\n    });\n\n\n    $(\"#filters-menu\").click(function() {\n        if ($(\".tagsInputFilter\").is(\":focus\")) {\n            $(\"#suggestionsAuthors\").hide();\n            $(\"#suggestionsTags\").show();\n        } else if ($(\"#authorFilters\").is(\":focus\")) {\n            $(\"#suggestionsTags\").hide();\n            $(\"#suggestionsAuthors\").show();\n        } else {\n            $(\"#suggestionsTags\").hide();\n            $(\"#suggestionsAuthors\").hide();\n        }\n    });\n\n    $(document).on(\"click\", \"#removeFilter\", function() {\n        const filterText = $(this).attr('attr-filter');\n        const filterType = $(this).attr('attr-type');\n        const filterObject = {\"type\": filterType, \"value\": filterText};\n        removeFilter(filterObject);\n    });\n};\n\nconst getExperiences = async() => {\n    // Remapeamos la data por el caso especial de authores\n    const mappedFilters = filters.map((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return {type: filter.type, value: filter.value.id};\n        }\n        return filter;\n    });\n\n    const request = {\n        methodname: 'local_digitalta_experiences_get_by_pagination',\n        args: {\n            'pagenumber': selectedPage,\n            'filters': JSON.stringify(mappedFilters)\n        }\n    };\n    const response = await Ajax.call([request])[0];\n\n    if (response.data.length === 0) {\n        Templates.renderForPromise('local_digitalta/_common/empty-view', response).then(({html, js}) => {\n            Templates.replaceNodeContents(\"#list-experience-body\", html, js);\n        }).catch((error) => displayException(error));\n        $(\".digitalta.pagination\").hide();\n    } else {\n        let obj = {\"experiences\": response};\n        let paginationArray = generatePagination(response.pages, selectedPage);\n        const experienceList = await Templates.renderForPromise('local_digitalta/experiences/dashboard/experience-list', obj);\n        const pagination = await Templates.renderForPromise(\"local_digitalta/_common/pagination\", {\n            pages: paginationArray,\n            pagesCount: paginationArray.length,\n            currentPage: selectedPage,\n            disablePrevious: selectedPage <= 1,\n            disableNext: selectedPage >= pages,\n          });\n        Templates.replaceNodeContents(\"#list-experience-body\", experienceList.html, experienceList.js);\n        Templates.replaceNodeContents(\"#digital-pagination\", pagination.html, pagination.js);\n        $(\".digitalta.pagination\").show();\n    }\n};\n\nconst generatePagination = (totalPages, selectedPage) => {\n    let pagination = [];\n    for (let i = 0; i < totalPages; i++) {\n        let page = {\n            page: i + 1,\n            selected: i + 1 === selectedPage\n        };\n        pagination.push(page);\n    }\n    return pagination;\n};\n\nconst getAndRenderFilters = async() => {\n    const themesRequest = {\n        methodname: 'local_digitalta_themes_get',\n        args: {}\n    };\n    const tagsRequest = {methodname: 'local_digitalta_tags_get', args: {}};\n    const languagesRequest = {methodname: 'local_digitalta_experiences_get_used_langs', args: {}};\n    const themesResponse = await Ajax.call([themesRequest])[0];\n    const tagsResponse = await Ajax.call([tagsRequest])[0];\n    const languagesResponse = await Ajax.call([languagesRequest])[0];\n\n    // eslint-disable-next-line max-len\n    const templateFilterThemes = await Templates.renderForPromise('local_digitalta/_common/filterTheme', {\"themes\": themesResponse});\n    // eslint-disable-next-line max-len\n    const templateFilterLanguages = await Templates.renderForPromise('local_digitalta/_common/filterLanguages', {\"languages\": languagesResponse});\n    Templates.replaceNodeContents(\"#filterThemeSelect\", templateFilterThemes.html, templateFilterThemes.js);\n    Templates.replaceNodeContents(\"#filterLanguageSelect\", templateFilterLanguages.html, templateFilterLanguages.js);\n\n    const availableTags = tagsResponse.map(function(tag) {\n        return tag.name;\n    });\n\n    // Evento de entrada en el campo de texto\n    $('#inlineFormInputGroup').on('input', async function() {\n        var input = $(this).val().toLowerCase();\n        var suggestions = availableTags.filter(function(tag) {\n            return tag.toLowerCase().startsWith(input);\n        });\n\n        const templateFilterTags = await Templates.renderForPromise('local_digitalta/_common/listTags', {tags: suggestions});\n        Templates.replaceNodeContents(\"#suggestionsTags\", templateFilterTags.html, templateFilterTags.js);\n    });\n};\n\nconst setFilter = (filterObject) => {\n    filters.push(filterObject);\n    selectedPage = 1;\n    renderFilters();\n};\n\nconst removeFilter = (filterObject) => {\n    const index = filters.findIndex((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return filter.type === filterObject.type && filter.value.name === filterObject.value;\n        } else {\n            return filter.type === filterObject.type && filter.value === filterObject.value;\n        }\n    });\n\n    if (index > -1) {\n        if (filterObject.type === 'theme') {\n            let themeSelect = $(\"#filterThemes\");\n            let option = $('option[value=\"' + filters[index].value.id + '\"].disabled', themeSelect);\n            option.removeClass('disabled');\n            option.addClass('enable');\n            $(\"#filterThemes option:first\").prop(\"selected\", true);\n            $(option).prop('disabled', false);\n        } else if (filterObject.type === 'language') {\n            let langSelect = $(\".filterLanguageSelect\");\n            let option = $('option[value=\"' + filterObject.value + '\"].disabled', langSelect);\n            option.removeClass('disabled');\n            option.addClass('enable');\n            $(\".filterLanguageSelect option:first\").prop(\"selected\", true);\n            $(option).prop('disabled', false);\n        }\n        filters.splice(index, 1);\n        selectedPage = 1;\n        renderFilters();\n    }\n};\n\nconst renderFilters = () => {\n    getExperiences();\n    const filtersMap = filters.map((filter) => {\n        if (filter.type === 'author' || filter.type === 'theme') {\n            return {type: filter.type, value: filter.value.name};\n        } else {\n            return {type: filter.type, value: filter.value};\n        }\n    });\n    Templates.renderForPromise('local_digitalta/_common/filterList', {filters: filtersMap}).then(({html, js}) => {\n        Templates.replaceNodeContents(\"#filtersList\", html, js);\n    }).catch((error) => displayException(error));\n};"],"names":["filters","selectedPage","getAndRenderFilters","getExperiences","on","e","stopPropagation","document","clickedPage","this","attr","parseInt","state","posibleNextPage","posiblePreviousPage","selectedValue","val","selectedText","text","length","element","addClass","removeClass","setFilter","id","name","prop","event","key","keyCode","filterText","async","request","methodname","args","courseid","enrolid","page","perpage","search","searchanywhere","response","Ajax","call","empty","authorsSuggestions","Templates","renderForPromise","users","replaceNodeContents","html","js","type","value","click","is","hide","show","filterType","removeFilter","mappedFilters","map","filter","JSON","stringify","data","then","_ref","catch","error","obj","paginationArray","generatePagination","pages","experienceList","pagination","pagesCount","currentPage","disablePrevious","disableNext","totalPages","i","selected","push","themesResponse","tagsResponse","languagesResponse","templateFilterThemes","templateFilterLanguages","availableTags","tag","input","toLowerCase","suggestions","startsWith","templateFilterTags","tags","filterObject","renderFilters","index","findIndex","themeSelect","option","langSelect","splice","filtersMap","_ref2"],"mappings":"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"}