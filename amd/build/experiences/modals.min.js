define("local_dta/experiences/modals",["exports","local_dta/themes/autocomplete","local_dta/tiny/manage","local_dta/resources/manage_resources","local_dta/repositories/experiences_repository","local_dta/repositories/resources_repository","local_dta/repositories/cases_repository","local_dta/repositories/languages_repository","core/normalise","./main","local_dta/repositories/context_repository","core/config","core/str","jquery","core/modal","core/modal_events","core/modal_factory","core/modal_registry","core/notification","local_dta/tags/autocomplete"],(function(_exports,_autocomplete,_manage,_manage_resources,_experiences_repository,_resources_repository,_cases_repository,_languages_repository,_normalise,_main,_context_repository,Cfg,Str,_jquery,_modal,_modal_events,_modal_factory,_modal_registry,_notification,_autocomplete2){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}return newObj.default=obj,cache&&cache.set(obj,newObj),newObj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.showManageModal=_exports.displaylinkResourcesModal=_exports.displaylinkCasesModal=_exports.displayManageModal=void 0,Cfg=_interopRequireWildcard(Cfg),Str=_interopRequireWildcard(Str),_jquery=_interopRequireDefault(_jquery),_modal=_interopRequireDefault(_modal),_modal_events=_interopRequireDefault(_modal_events),_modal_factory=_interopRequireDefault(_modal_factory),_modal_registry=_interopRequireDefault(_modal_registry),_notification=_interopRequireDefault(_notification);const manageModal=class extends _modal.default{static TYPE="local_dta/manageModal";static TEMPLATE="local_dta/experiences/modals/modal-manage";registerEventListeners(){super.registerEventListeners(),this.registerCloseOnSave(),this.registerCloseOnCancel()}};_modal_registry.default.register(manageModal.TYPE,manageModal,manageModal.TEMPLATE);const linkResourcesModal=class extends _modal.default{static TYPE="local_dta/linkResourcesModal";static TEMPLATE="local_dta/experiences/modals/modal-import-resources";registerEventListeners(){super.registerEventListeners(),this.registerCloseOnSave(),this.registerCloseOnCancel()}};_modal_registry.default.register(linkResourcesModal.TYPE,linkResourcesModal,linkResourcesModal.TEMPLATE);const linkCasesModal=class extends _modal.default{static TYPE="local_dta/linkCasesModal";static TEMPLATE="local_dta/experiences/modals/modal-import-cases";registerEventListeners(){super.registerEventListeners(),this.registerCloseOnSave(),this.registerCloseOnCancel()}};_modal_registry.default.register(linkCasesModal.TYPE,linkCasesModal,linkCasesModal.TEMPLATE);_exports.showManageModal=async experienceid=>{const strings=Str.get_strings([{key:"teacheracademy:actions:share",component:"local_dta"},{key:"teacheracademy:actions:share:description",component:"local_dta"},{key:"teacheracademy:actions:share:title",component:"local_dta"},{key:"teacheracademy:actions:share:title:placeholder",component:"local_dta"},{key:"teacheracademy:actions:share:visibility",component:"local_dta"},{key:"teacheracademy:actions:share:language",component:"local_dta"},{key:"teacheracademy:actions:share:themes",component:"local_dta"},{key:"teacheracademy:actions:share:tags",component:"local_dta"},{key:"teacheracademy:actions:share:picture",component:"local_dta"},{key:"visibility:public",component:"local_dta"},{key:"visibility:private",component:"local_dta"}]);Promise.all([strings]).then((_ref=>{let[strings]=_ref;return displayManageModal(strings,experienceid)}))};const displayManageModal=async(strings,experienceid)=>{let experience={};null!==experienceid&&await(0,_experiences_repository.experienceGet)(experienceid).then((response=>{experience=response.experience}));let languages=await(0,_languages_repository.getLanguages)({prioritizeInstalled:!0});languages=languages.map((language=>({key:language.code,value:language.name,selected:language.code===experience.lang})));let visibility=[{key:1,value:strings[9]},{key:0,value:strings[10]}];visibility=visibility.map((item=>({key:item.key,value:item.value,selected:item.key===experience.visible})));const modal=await _modal_factory.default.create({type:manageModal.TYPE,templateContext:{modal:{title:strings[0],description:strings[1],sections:{title:{label:strings[2],placeholder:strings[3]},visibility:{label:strings[4]},language:{label:strings[5]},themes:{label:strings[6]},tags:{label:strings[7]},picture:{label:strings[8]}},visibility:visibility,languages:languages},current:{id:experience.id??0,title:experience.title??null,description:experience.description??null,visible:experience.visible??null,lang:experience.lang??null,tags:experience.tags??[],themes:experience.themes??[]}},large:!0});modal.show();const $root=modal.getRoot();(0,_manage.createTinyMCE)("experience-add-description"),(0,_autocomplete2.autocompleteTags)("#experience-add-tags"),(0,_autocomplete.autocompleteThemes)("#experience-add-themes"),$root.on(_modal_events.default.save,((event,modal)=>{event.preventDefault();const form=$root[0].querySelector("form");validateManageRequiredFields(form)&&handleManageModalSubmission(event,modal)}))};_exports.displayManageModal=displayManageModal;const handleManageModalSubmission=async(event,modal)=>{const form=(0,_normalise.getList)(modal.getRoot())[0].querySelector("form");if(!form)return;const formData={id:form.querySelector('input[name="experience-add-id"]').value,title:form.querySelector('input[name="experience-add-title"]').value,description:(0,_manage.getTinyMCEContent)("experience-add-description"),visible:form.querySelector('select[name="experience-add-visibility"]').value,lang:form.querySelector('select[name="experience-add-lang"]').value,themes:Array.from(form.querySelectorAll('select[name="experience-add-themes"] option:checked'),(option=>option.value)),tags:Array.from(form.querySelectorAll('select[name="experience-add-tags"] option:checked'),(option=>option.value))};try{const response=await(0,_experiences_repository.experienceUpsert)(formData);_notification.default.addNotification({message:"Experience saved successfully.",type:"success"}),location.href=Cfg.wwwroot+"/local/dta/pages/experiences/view.php?id="+response.experienceid}catch(error){_notification.default.exception(error)}},validateManageRequiredFields=form=>{const requiredFields=form.querySelectorAll("input[required], select[required], textarea[required]");for(const field of requiredFields)if(!field.value)return field.focus(),!1;return!0};_exports.displaylinkResourcesModal=async change=>{const{resources:resources}=await(0,_resources_repository.getAllResources)(),modal=await _modal_factory.default.create({type:linkResourcesModal.TYPE,templateContext:{elementid_:Date.now(),resources:resources,change:change},large:!0});modal.show();const $root=modal.getRoot();if(change){const changeElement=$root.find("#changeToAddResource").get(0);changeElement&&(changeElement.onclick=()=>{(0,_manage_resources.displayDialogue)(!0),modal.hide()})}$root.on(_modal_events.default.save,(()=>{handleResourceModal()}))};const handleResourceModal=()=>{const experienceid=(0,_jquery.default)(_main.SELECTORS.INPUTS.experienceid).val(),seleccionados=[];(0,_jquery.default)("#resources-group input[type='checkbox']:checked").each((function(){seleccionados.push((0,_jquery.default)(this).val())}));const contextid=[];seleccionados.forEach((async resourceid=>{contextid.push((0,_context_repository.contextUpsert)({component:"experience",componentinstance:experienceid,modifier:"resource",modifierinstance:resourceid}))})),Promise.all(contextid).then((()=>{window.location.reload()})).catch((error=>{_notification.default.exception(error)}))};_exports.displaylinkCasesModal=async()=>{const{cases:cases}=await(0,_cases_repository.getCases)(),modal=await _modal_factory.default.create({type:linkCasesModal.TYPE,templateContext:{elementid_:Date.now(),cases:cases},large:!0});modal.show();modal.getRoot().on(_modal_events.default.save,(()=>{handleCasesModal()}))};const handleCasesModal=()=>{const experienceid=(0,_jquery.default)(_main.SELECTORS.INPUTS.experienceid).val(),seleccionados=[];(0,_jquery.default)("#cases-group input[type='checkbox']:checked").each((function(){seleccionados.push((0,_jquery.default)(this).val())}));const contextid=[];seleccionados.forEach((async caseid=>{contextid.push((0,_context_repository.contextUpsert)({component:"experience",componentinstance:experienceid,modifier:"case",modifierinstance:caseid}))})),Promise.all(contextid).then((()=>{window.location.reload()})).catch((error=>{_notification.default.exception(error)}))}}));

//# sourceMappingURL=modals.min.js.map