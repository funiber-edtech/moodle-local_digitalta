{"version":3,"file":"main.min.js","sources":["../../../src/experiences/view/main.js"],"sourcesContent":["import Notification from \"core/notification\";\nimport ModalFactory from 'core/modal_factory';\nimport Templates from 'core/templates';\nimport {get_string} from 'core/str';\nimport {toggleStatus} from 'local_dta/repositories/experience_repository';\nimport {setEventListeners} from './listeners';\nimport {deleteContext} from 'local_dta/repositories/context_repository';\n\n\nlet changeStatusModal = null;\n\n// Selectors\nexport const SELECTORS = {\n    BUTTONS: {\n        block: '#block-experience-button',\n        unblock: '#open-experience-button',\n        confirmBlockModal: '#confirm-block-experience-button',\n        addResourceBtn: '#add-resource-button',\n        addCasesBtn: \"#add-cases-button\",\n        removeContextButton: \"#remove-context-button\",\n    },\n    INPUTS: {\n        experienceid: '#experience-id',\n    }\n};\n\n/**\n * Show the delete section modal\n * @param {int} experienceid\n * @return {void}\n */\nexport async function showChangeStatusModal(experienceid) {\n    changeStatusModal = await ModalFactory.create({\n        title: get_string(\"experience_view_block_modal_title\", \"local_dta\"),\n        body: Templates.render('local_dta/experiences/view/open-close-modal', {experienceid}),\n    });\n    changeStatusModal.show();\n}\n\n/**\n * Toggle the status of an experience\n * @param {int} experienceid\n * @return {void}\n */\nexport async function toggleExperienceStatus(experienceid) {\n    try {\n        await toggleStatus(experienceid);\n        changeStatusModal.hide();\n        window.location.reload();\n        return;\n    } catch (error) {\n        Notification.exception(error);\n    }\n}\n\n/**\n * Display the link resources modal\n * @param {int} contextid  The context id.\n */\nexport async function deleteRelatedContext(contextid) {\n    try {\n        await deleteContext({id: contextid});\n        window.location.reload();\n    } catch (error) {\n        Notification.exception(error);\n    }\n}\n\nexport const init = () => {\n    setEventListeners();\n};"],"names":["contextid","id","window","location","reload","error","exception","experienceid","changeStatusModal","ModalFactory","create","title","body","Templates","render","show","hide","BUTTONS","block","unblock","confirmBlockModal","addResourceBtn","addCasesBtn","removeContextButton","INPUTS"],"mappings":"2iBA2D2CA,qBAE7B,qCAAc,CAACC,GAAID,YACzBE,OAAOC,SAASC,SAClB,MAAOC,6BACQC,UAAUD,4EAjCaE,cACxCC,wBAA0BC,uBAAaC,OAAO,CAC1CC,OAAO,mBAAW,oCAAqC,aACvDC,KAAMC,mBAAUC,OAAO,8CAA+C,CAACP,aAAAA,iBAE3EC,kBAAkBO,uDAQuBR,+BAE/B,uCAAaA,cACnBC,kBAAkBQ,YAClBd,OAAOC,SAASC,SAElB,MAAOC,6BACQC,UAAUD,qKA1C3BG,kBAAoB,wBAGC,CACrBS,QAAS,CACLC,MAAO,2BACPC,QAAS,0BACTC,kBAAmB,mCACnBC,eAAgB,uBAChBC,YAAa,oBACbC,oBAAqB,0BAEzBC,OAAQ,CACJjB,aAAc,iCA8CF"}