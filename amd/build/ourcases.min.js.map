{"version":3,"file":"ourcases.min.js","sources":["../src/ourcases.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport {sectionTextUpsert} from 'local_dta/repositories/ourcasesRepository';\r\n\r\n\r\n/**\r\n * Add a new text section to the page.\r\n * @return {void}\r\n */\r\nfunction addTextSection() {\r\n    Templates.render('local_dta/ourcases/section-text', {id: 0, title: null}).then((html) => {\r\n        return $('#sections-body').append(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Upsert a text section.\r\n * @param {object} args - The arguments for the function.\r\n */\r\nfunction upsertTextSection(args) {\r\n    sectionTextUpsert(args).then(() => {\r\n        return changeSectionHeaderToEdit();\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @return {void}\r\n * */\r\nfunction changeSectionHeaderToEdit(toView = false) {\r\n    const sectionid = $('#section-header-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const description = $('#section-header-description').val();\r\n    const template = toView ? 'local_dta/ourcases/section-header-edit' : 'local_dta/ourcases/section-header-view';\r\n    Templates.render(template,\r\n     {sectionheader: {id: sectionid, title, description}}).then((html) => {\r\n        return $('#sections-header').html(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n *\r\n */\r\nfunction upsertHeaderSection() {\r\n    const ourcaseid = $('#ourcases-id').val();\r\n    const sectionid = $('#section-header-id').val();\r\n    const title = $('#section-header-title').val();\r\n    const text = $('#section-header-description').val();\r\n    const sequence = 0;\r\n    upsertTextSection({ourcaseid, sectionid, title, text, sequence});\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @return {void}\r\n * */\r\nfunction setEventListeners() {\r\n    // Add a new text section\r\n    $(document).on('click', '#add-section', () => {\r\n        addTextSection();\r\n    });\r\n    // Edit the header\r\n    $(document).on('click', '#header-edit-button', () => {\r\n        upsertHeaderSection();\r\n    });\r\n    // Change the header section to edit mode\r\n    $(document).on('click', '#header-to-edit-button', () => {\r\n        changeSectionHeaderToEdit(true);\r\n    });\r\n}\r\n\r\n/**\r\n * Initialize the module.\r\n * @return {void}\r\n */\r\nexport const init = () => {\r\n    setEventListeners();\r\n};\r\n"],"names":["changeSectionHeaderToEdit","toView","sectionid","val","title","description","template","render","sectionheader","id","then","html","fail","Notification","exception","upsertHeaderSection","ourcaseid","text","args","sequence","setEventListeners","document","on","append"],"mappings":"sSAgCSA,gCAA0BC,qEACzBC,WAAY,mBAAE,sBAAsBC,MACpCC,OAAQ,mBAAE,yBAAyBD,MACnCE,aAAc,mBAAE,+BAA+BF,MAC/CG,SAAWL,OAAS,yCAA2C,4DAC3DM,OAAOD,SAChB,CAACE,cAAe,CAACC,GAAIP,UAAWE,MAAAA,MAAOC,YAAAA,eAAeK,MAAMC,OAClD,mBAAE,oBAAoBA,KAAKA,QACnCC,KAAKC,sBAAaC,oBAShBC,4BACCC,WAAY,mBAAE,gBAAgBb,MAC9BD,WAAY,mBAAE,sBAAsBC,MACpCC,OAAQ,mBAAE,yBAAyBD,MACnCc,MAAO,mBAAE,+BAA+Bd,UAhCvBe,KAAAA,KAkCL,CAACF,UAAAA,UAAWd,UAAAA,UAAWE,MAAAA,MAAOa,KAAAA,KAAME,SADrC,6CAhCCD,MAAMR,MAAK,IAClBV,8BACRY,KAAKC,sBAAaC,oBAsChBM,wCAEHC,UAAUC,GAAG,QAAS,gBAAgB,wBArD9Bf,OAAO,kCAAmC,CAACE,GAAI,EAAGL,MAAO,OAAOM,MAAMC,OACrE,mBAAE,kBAAkBY,OAAOZ,QACnCC,KAAKC,sBAAaC,kCAuDnBO,UAAUC,GAAG,QAAS,uBAAuB,KAC3CP,6CAGFM,UAAUC,GAAG,QAAS,0BAA0B,KAC9CtB,2BAA0B,2OAQd,KAChBoB"}