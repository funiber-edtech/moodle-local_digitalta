{"version":3,"file":"reactions.min.js","sources":["../src/reactions.js"],"sourcesContent":["// En tu_plugin/amd/src/interactions.js\r\ndefine(['jquery', 'core/templates', 'core/notification'], function($, Templates, Notification) {\r\n    var likeCount = 256; // Valor inicial de likes quemado para el ejemplo.\r\n    // Actualizar la lista de comentarios, que podría provenir de una fuente de datos en el servidor.\r\n    var commentList = [{\r\n        name: \"Usuario 1\", comment: \"Este es un comentario.\"\r\n    }, {\r\n        name: \"Usuario 2\", comment: \"¡Otro comentario aquí!\"\r\n    }];\r\n\r\n    /**\r\n     * Agrega un like al contenido.\r\n     * @return {void}\r\n     */\r\n    function addLike() {\r\n        likeCount++;\r\n        $('#likeCount').text(likeCount);\r\n        // Aquí se implementaría la llamada AJAX para actualizar los likes en el servidor.\r\n    }\r\n\r\n    /**\r\n     * Agrega un dislike al contenido.\r\n     * @return {void}\r\n     */\r\n    function addDislike() {\r\n        // La lógica de dislike se implementaría aquí. No hay una actualización visible en la UI para el número de dislikes.\r\n    }\r\n\r\n    /**\r\n     * Muestra u oculta la sección de comentarios.\r\n     * @return {void}\r\n     */\r\n    function toggleComments() {\r\n        $('#commentsCollapse').collapse('toggle');\r\n    }\r\n\r\n    /**\r\n     * Envía un comentario al servidor.\r\n     * @return {void}\r\n     */\r\n    function sendComment() {\r\n        var commentText = $('#commentText').val().trim();\r\n        if (commentText) {\r\n            commentList.push({name: \"Usuario Nuevo\", comment: commentText}); // Agregar el comentario al array.\r\n            updateCommentsList(); // Actualizar la lista de comentarios en la UI.\r\n            $('#commentText').val(''); // Limpiar el campo de texto.\r\n            // Aquí se implementaría la llamada AJAX para enviar el comentario al servidor.\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Actualiza la lista de comentarios en la UI.\r\n     * @return {void}\r\n     */\r\n    function updateCommentsList() {\r\n        Templates.render('local_dta/experience/comment', {comments: commentList}).then(function(html) {\r\n            $('#commentsList').html(html);\r\n        }).fail(Notification.exception);\r\n    }\r\n\r\n    // Exponer las funciones al objeto window para hacerlas accesibles globalmente.\r\n    window.addLike = addLike;\r\n    window.addDislike = addDislike;\r\n    window.toggleComments = toggleComments;\r\n    window.sendComment = sendComment;\r\n\r\n    return {\r\n        init: function() {\r\n            updateCommentsList(); // Llamar a esta función para cargar los comentarios cuando se inicializa la página.\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Templates","Notification","likeCount","commentList","name","comment","updateCommentsList","render","comments","then","html","fail","exception","window","addLike","text","addDislike","toggleComments","collapse","sendComment","commentText","val","trim","push","init"],"mappings":"AACAA,6BAAO,CAAC,SAAU,iBAAkB,sBAAsB,SAASC,EAAGC,UAAWC,kBACzEC,UAAY,IAEZC,YAAc,CAAC,CACfC,KAAM,YAAaC,QAAS,0BAC7B,CACCD,KAAM,YAAaC,QAAS,oCA+CvBC,qBACLN,UAAUO,OAAO,+BAAgC,CAACC,SAAUL,cAAcM,MAAK,SAASC,MACpFX,EAAE,iBAAiBW,KAAKA,SACzBC,KAAKV,aAAaW,kBAIzBC,OAAOC,mBA9CHZ,YACAH,EAAE,cAAcgB,KAAKb,YA8CzBW,OAAOG,wBACPH,OAAOI,0BA9BHlB,EAAE,qBAAqBmB,SAAS,WA+BpCL,OAAOM,2BAvBCC,YAAcrB,EAAE,gBAAgBsB,MAAMC,OACtCF,cACAjB,YAAYoB,KAAK,CAACnB,KAAM,gBAAiBC,QAASe,cAClDd,qBACAP,EAAE,gBAAgBsB,IAAI,MAqBvB,CACHG,KAAM,WACFlB"}