{"version":3,"file":"resources_repository.min.js","sources":["../../src/repositories/resources_repository.js"],"sourcesContent":["import Ajax from 'core/ajax';\n\n/**\n * Get all resources.\n *\n * Valid args are:\n * - id: The resource id\n * - filters: The resource filters\n * @method resourcesGet\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesGet = args => {\n    const request = {\n        methodname: 'local_digitalta_resources_get',\n        args: args\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Upsert a resource.\n *\n * Valid args are:\n * - id: The resource id\n * - name: The resource name\n * - description: The resource description\n * - themes: The resource themes\n * - tags: The resource tags\n * - format: The resource format\n * - type: The resource type\n * - path: The resource path\n * - lang: The resource language\n * @method resourcesUpsert\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesUpsert = args => {\n    const request = {\n        methodname: 'local_digitalta_resources_upsert',\n        args: args\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Get all resources types.\n *\n * @method resourcesTypesGet\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesTypesGet = () => {\n    const request = {\n        methodname: 'local_digitalta_resources_types_get',\n        args: {}\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Assign resources to a context.\n *\n * Valid args are:\n * - resourceid: The resource id\n * - component: The component name\n * - componentinstance: The component instance\n * - description: The description\n * @method resourcesAssign\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesAssign = args => {\n    const request = {\n        methodname: 'local_digitalta_resources_assign',\n        args: args\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Unassign resources from a context.\n *\n * Valid args are:\n * - id: The resource id\n * - component: The component name\n * - componentinstance: The component instance\n * @method resourcesUnassign\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesUnassign = args => {\n    const request = {\n        methodname: 'local_digitalta_resources_unassign',\n        args: args\n    };\n    return Ajax.call([request])[0];\n};\n\n/**\n * Get the resources assigned to a component.\n *\n * Valid args are:\n * - component: The component name\n * - componentinstance: The component instance\n * @method resourcesGetComponentAssignments\n * @param {Object} args Arguments send to the webservice.\n * @return {Promise} Resolve with warnings.\n */\nexport const resourcesGetComponentAssignments = args => {\n    const request = {\n        methodname: 'local_digitalta_resources_get_assignments_for_component',\n        args: args\n    };\n    return Ajax.call([request])[0];\n};\n"],"names":["args","request","methodname","Ajax","call"],"mappings":"saAY4BA,aAClBC,QAAU,CACZC,WAAY,gCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,6BAoBDD,aACrBC,QAAU,CACZC,WAAY,mCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,+BASC,IAKtBE,cAAKC,KAAK,CAJD,CACZF,WAAY,sCACZF,KAAM,MAEkB,4BAeDA,aACrBC,QAAU,CACZC,WAAY,mCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,+BAcCD,aACvBC,QAAU,CACZC,WAAY,qCACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU,8CAagBD,aACtCC,QAAU,CACZC,WAAY,0DACZF,KAAMA,aAEHG,cAAKC,KAAK,CAACH,UAAU"}