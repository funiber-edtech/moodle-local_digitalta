{"version":3,"file":"main.min.js","sources":["../../src/chat/main.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Template from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport SELECTORS from './selectors';\r\nimport { getChatRooms, sendMessage, getMessages } from 'local_dta/repositories/chat_repository';\r\nimport setEventListeners from './listeners';\r\n\r\n\r\n/**\r\n * Create a chat in the target\r\n * @param {string} target\r\n */\r\nexport default function createChatInTarget(target) {\r\n    SELECTORS.TARGET = target;\r\n    initComponent();\r\n    return;\r\n}\r\n\r\n// Initialize the component\r\nconst initComponent = () => {\r\n    setEventListeners();\r\n    renderMenuChat();\r\n};\r\n\r\n/**\r\n * Render menu chat\r\n */\r\nexport async function renderMenuChat() {\r\n    const { chatrooms } = await getChatRooms();\r\n    Template.render(SELECTORS.TEMPLATES.MENU_CHAT, {\r\n        chatrooms\r\n    }).then((html) => {\r\n        $(SELECTORS.TARGET).html(html);\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Open chat\r\n * @param {number} id\r\n * Render chat\r\n */\r\nexport async function renderChat(id) {\r\n    const {messages} = await getMessages({ chatid: id });\r\n    SELECTORS.OPEN_CHAT_ID = id;\r\n    Template.render(SELECTORS.TEMPLATES.CHAT, {\r\n        SELECTORS\r\n    }).then((html) => {\r\n        $(SELECTORS.TARGET).html(html);\r\n        handlerMessages(messages);\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n\r\n/**\r\n * Render messages in chat\r\n * @param {Array} messages\r\n */\r\nexport async function handlerMessages(messages) {\r\n    let html = '';\r\n    const promises = messages.map((msg) => {\r\n        const {message, timecreated, is_mine} = msg;\r\n        return renderMessage(message, timecreated, is_mine);\r\n    });\r\n    try {\r\n        html = (await Promise.all(promises)).join('');\r\n    } catch (error) {\r\n        Notification.exception(error);\r\n    }\r\n    $(SELECTORS.CONTAINERS.MESSAGES).html(html);\r\n}\r\n\r\n/**\r\n * Render my message\r\n * @param {string} text\r\n * @param {string} time\r\n * @param {boolean} mine\r\n * @returns {Promise}\r\n */\r\nexport async function renderMessage(text, time, mine) {\r\n    const TEMPLATE = mine ? SELECTORS.TEMPLATES.MY_MESSAGE : SELECTORS.TEMPLATES.OTHER_MESSAGE;\r\n    return Template.render(TEMPLATE, { text, time });\r\n}\r\n\r\n/**\r\n * Handle send message\r\n * @returns {Promise}\r\n */\r\nexport async function handleSendMessage() {\r\n    const message = $(SELECTORS.INPUTS.CHAT_REPLY).val().trim();\r\n    sendMessage({\r\n        chatid: SELECTORS.OPEN_CHAT_ID,\r\n        message,\r\n    }).then(() => {\r\n        $(SELECTORS.INPUTS.CHAT_REPLY).val('');\r\n        addNewMessage(message);\r\n        return;\r\n    }).fail(Notification.exception);\r\n    return;\r\n}\r\n\r\n/**\r\n * Add new message\r\n * @param {string} message\r\n */\r\nasync function addNewMessage(message) {\r\n    const date = new Date().toLocaleTimeString('es-ES', {hour12: false, hour: '2-digit', minute: '2-digit'});\r\n    const html = await renderMessage(message, date, true);\r\n\r\n    $(SELECTORS.CONTAINERS.MESSAGES).append(html);\r\n}"],"names":["target","TARGET","initComponent","message","SELECTORS","INPUTS","CHAT_REPLY","val","trim","chatid","OPEN_CHAT_ID","then","date","Date","toLocaleTimeString","hour12","hour","minute","html","renderMessage","CONTAINERS","MESSAGES","append","addNewMessage","fail","Notification","exception","id","messages","render","TEMPLATES","CHAT","handlerMessages","renderMenuChat","chatrooms","MENU_CHAT","promises","map","msg","timecreated","is_mine","Promise","all","join","error","text","time","mine","TEMPLATE","MY_MESSAGE","OTHER_MESSAGE","Template"],"mappings":"4ZAY2CA,kCAC7BC,OAASD,YACnBE,mEA4EMC,SAAU,mBAAEC,mBAAUC,OAAOC,YAAYC,MAAMC,mDACzC,CACRC,OAAQL,mBAAUM,aAClBP,QAAAA,UACDQ,MAAK,yBACFP,mBAAUC,OAAOC,YAAYC,IAAI,mBAWdJ,eACnBS,MAAO,IAAIC,MAAOC,mBAAmB,QAAS,CAACC,QAAQ,EAAOC,KAAM,UAAWC,OAAQ,YACvFC,WAAaC,cAAchB,QAASS,MAAM,uBAE9CR,mBAAUgB,WAAWC,UAAUC,OAAOJ,MAdpCK,CAAcpB,YAEfqB,KAAKC,sBAAaC,wFAxDQC,UACvBC,SAACA,gBAAkB,gCAAY,CAAEnB,OAAQkB,wBACrCjB,aAAeiB,sBAChBE,OAAOzB,mBAAU0B,UAAUC,KAAM,CACtC3B,UAAAA,qBACDO,MAAMO,2BACHd,mBAAUH,QAAQiB,KAAKA,MACzBc,gBAAgBJ,aAEjBJ,KAAKC,sBAAaC,oUAhCnBxB,cAAgB,8BAElB+B,iCAMkBA,uBACZC,UAAEA,iBAAoB,sDACnBL,OAAOzB,mBAAU0B,UAAUK,UAAW,CAC3CD,UAAAA,YACDvB,MAAMO,2BACHd,mBAAUH,QAAQiB,KAAKA,SAE1BM,KAAKC,sBAAaC,0BAyBHM,gBAAgBJ,cAC9BV,KAAO,SACLkB,SAAWR,SAASS,KAAKC,YACrBnC,QAACA,QAADoC,YAAUA,YAAVC,QAAuBA,SAAWF,WACjCnB,cAAchB,QAASoC,YAAaC,gBAG3CtB,YAAcuB,QAAQC,IAAIN,WAAWO,KAAK,IAC5C,MAAOC,6BACQlB,UAAUkB,2BAEzBxC,mBAAUgB,WAAWC,UAAUH,KAAKA,qBAUpBC,cAAc0B,KAAMC,KAAMC,YACtCC,SAAWD,KAAO3C,mBAAU0B,UAAUmB,WAAa7C,mBAAU0B,UAAUoB,qBACtEC,mBAAStB,OAAOmB,SAAU,CAAEH,KAAAA,KAAMC,KAAAA"}