define("local_dta/chat/main",["exports","jquery","core/templates","core/notification","./selectors","local_dta/repositories/chat_repository","./listeners","./status"],(function(_exports,_jquery,_templates,_notification,_selectors,_chat_repository,_listeners,_status){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=function(target){return _selectors.default.TARGET=target,void initComponent()},_exports.handleSendMessage=async function(){const message=(0,_jquery.default)(_selectors.default.INPUTS.CHAT_REPLY).val().trim();return void(0,_chat_repository.sendMessage)({chatid:_selectors.default.OPEN_CHAT_ID,message:message}).then((()=>{(0,_jquery.default)(_selectors.default.INPUTS.CHAT_REPLY).val(""),async function(message){const date=(new Date).toLocaleTimeString("es-ES",{hour12:!1,hour:"2-digit",minute:"2-digit"}),html=await renderMessage(message,date,!0);status.activeMessages.push({message:message,timecreated:date,is_mine:!0}),(0,_jquery.default)(_selectors.default.CONTAINERS.MESSAGES).append(html)}(message)})).fail(_notification.default.exception)},_exports.handlerMessages=handlerMessages,_exports.handlerNewOtherMessage=handlerNewOtherMessage,_exports.reloaderMessages=reloaderMessages,_exports.renderChat=async function(id){const{messages:messages}=await(0,_chat_repository.getMessages)({chatid:id});_selectors.default.OPEN_CHAT_ID=id,_templates.default.render(_selectors.default.TEMPLATES.CHAT,{SELECTORS:_selectors.default}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html),handlerMessages(messages),status.activeMessages=messages})).fail(_notification.default.exception)},_exports.renderMenuChat=renderMenuChat,_exports.renderMessage=renderMessage,_jquery=_interopRequireDefault(_jquery),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification),_selectors=_interopRequireDefault(_selectors),_listeners=_interopRequireDefault(_listeners);const status=new((_status=_interopRequireDefault(_status)).default);const initComponent=()=>{(0,_listeners.default)(),renderMenuChat(),setInterval(reloaderMessages,1e3)};async function renderMenuChat(){const{chatrooms:chatrooms}=await(0,_chat_repository.getChatRooms)();_templates.default.render(_selectors.default.TEMPLATES.MENU_CHAT,{chatrooms:chatrooms}).then((html=>{(0,_jquery.default)(_selectors.default.TARGET).html(html),status.emptyActiveMessages(),_selectors.default.OPEN_CHAT_ID=0})).fail(_notification.default.exception)}async function handlerMessages(messages){let html="";const promises=messages.map((msg=>{const{message:message,timecreated:timecreated,is_mine:is_mine}=msg;return renderMessage(message,timecreated,is_mine)}));try{html=(await Promise.all(promises)).join(""),(0,_jquery.default)(_selectors.default.CONTAINERS.MESSAGES).html(html)}catch(error){_notification.default.exception(error)}}async function reloaderMessages(){if(_selectors.default.OPEN_CHAT_ID){const{messages:messages}=await(0,_chat_repository.getMessages)({chatid:_selectors.default.OPEN_CHAT_ID});handlerNewOtherMessage(messages)}else;}async function handlerNewOtherMessage(messages){var arr1,arr2;const promises=(arr1=messages,arr2=status.activeMessages,arr1.filter((objeto1=>!arr2.some((objeto2=>function(objeto1,objeto2){return objeto1.message===objeto2.message}(objeto1,objeto2)))))).map((msg=>{const{message:message,timecreated:timecreated,is_mine:is_mine}=msg;return status.activeMessages.push(msg),renderMessage(message,timecreated,is_mine)}));try{const html=(await Promise.all(promises)).join("");(0,_jquery.default)(_selectors.default.CONTAINERS.MESSAGES).append(html)}catch(error){_notification.default.exception(error)}}async function renderMessage(text,time,mine){const TEMPLATE=mine?_selectors.default.TEMPLATES.MY_MESSAGE:_selectors.default.TEMPLATES.OTHER_MESSAGE;return _templates.default.render(TEMPLATE,{text:text,time:time})}return _exports.default}));

//# sourceMappingURL=main.min.js.map