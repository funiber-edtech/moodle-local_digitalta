<<<<<<< HEAD
{"version":3,"file":"main.min.js","sources":["../../src/mentors/main.js"],"sourcesContent":["import $ from \"jquery\";\nimport Templates from \"core/templates\";\nimport Notification from \"core/notification\";\nimport { setEventListeners } from \"./listeners\";\nimport { loadMentors } from \"../repositories/pagination_repository\";\nimport { SELECTORS } from \"./selectors\";\n\n/**\n * Reload mentors.\n * @param {number} offset The number of mentors loaded.\n * @param {number} chunkAmount The number of mentors to load.\n * @return {void}\n */\nexport function reloadMentors(offset, chunkAmount) {\n  //eslint-disable-next-line no-console\n  console.log(\"offset -> \", offset);\n  //eslint-disable-next-line no-console\n  console.log(\"chunkAmount -> \", chunkAmount);\n\n  loadMentors({ numLoaded: offset, numToLoad: chunkAmount })\n    .then((mentors) => {\n      Templates.render(\"local_dta/mentors/mentors-list\", {\n        mentors: mentors.mentors,\n        ismentorcardvertical: true,\n      })\n        .then((html, js) => {\n          Templates.appendNodeContents(\"#mentor-list\", html, js);\n          return;\n        })\n        .fail(Notification.exception);\n    })\n    .fail(Notification.exception);\n}\n\n/**\n * Load more mentors.\n *\n * @param {number} chunkAmount The number of mentors to load.\n * @return {void}\n */\nexport async function loadMore(chunkAmount) {\n  // Traer más mentores y actualizar el número de mentores cargados\n  let offset = parseInt($(SELECTORS.INPUTS.numLoaded).val()) + chunkAmount;\n  $(SELECTORS.INPUTS.numLoaded).val(offset);\n\n  reloadMentors(offset, chunkAmount);\n}\n\nexport const init = () => {\n  setEventListeners();\n};\n"],"names":["reloadMentors","offset","chunkAmount","console","log","numLoaded","numToLoad","then","mentors","render","ismentorcardvertical","html","js","appendNodeContents","fail","Notification","exception","parseInt","SELECTORS","INPUTS","val"],"mappings":"2VAagBA,cAAcC,OAAQC,aAEpCC,QAAQC,IAAI,aAAcH,QAE1BE,QAAQC,IAAI,kBAAmBF,oDAEnB,CAAEG,UAAWJ,OAAQK,UAAWJ,cACzCK,MAAMC,6BACKC,OAAO,iCAAkC,CACjDD,QAASA,QAAQA,QACjBE,sBAAsB,IAErBH,MAAK,CAACI,KAAMC,yBACDC,mBAAmB,eAAgBF,KAAMC,OAGpDE,KAAKC,sBAAaC,cAEtBF,KAAKC,sBAAaC,yHASQd,iBAEzBD,OAASgB,UAAS,mBAAEC,qBAAUC,OAAOd,WAAWe,OAASlB,gCAC3DgB,qBAAUC,OAAOd,WAAWe,IAAInB,QAElCD,cAAcC,OAAQC,2MAGJ"}
=======
{"version":3,"file":"main.min.js","sources":["../../src/mentors/main.js"],"sourcesContent":["import $ from \"jquery\";\nimport Templates from \"core/templates\";\nimport Notification from \"core/notification\";\nimport { setEventListeners } from \"./listeners\";\nimport { loadMentors } from \"../repositories/pagination_repository\";\n\n// Selectors\nexport const SELECTORS = {\n  BUTTONS: {\n    loadMoreButton: \"#load-more-button\",\n  },\n  INPUTS: {\n    numLoaded: \"#numLoaded\",\n  },\n};\n\n/**\n * Reload mentors.\n * @param {number} offset The number of mentors loaded.\n * @param {number} chunkAmount The number of mentors to load.\n * @return {void}\n */\nexport function reloadMentors(offset, chunkAmount) {\n    //eslint-disable-next-line no-console\n    console.log(\"offset -> \", offset);\n    //eslint-disable-next-line no-console\n    console.log(\"chunkAmount -> \", chunkAmount);\n\n\n  loadMentors({ numLoaded: offset, numToLoad: chunkAmount })\n    .then((mentors) => {\n      Templates.render(\"local_dta/mentors/mentors-list\", {\n        mentors: mentors.mentors,\n        ismentorcardvertical: true,\n      })\n        .then((html, js) => {\n          // Hacemos append en el último mentor, el parent es para indicar que se va a hacer append en el div\n          Templates.appendNodeContents(\"#mentor-list\", html, js);\n          return;\n        })\n        .fail(Notification.exception);\n    })\n    .fail(Notification.exception);\n}\n\n/**\n * Load more mentors.\n *\n * @param {number} chunkAmount The number of mentors to load.\n * @return {void}\n */\nexport async function loadMore(chunkAmount) {\n  // Traer más mentores y actualizar el número de mentores cargados\n    let offset = parseInt($(SELECTORS.INPUTS.numLoaded).val()) + chunkAmount;\n    $(SELECTORS.INPUTS.numLoaded).val(offset);\n\n    reloadMentors(offset, chunkAmount);\n}\n\nexport const init = () => {\n  setEventListeners();\n};\n"],"names":["chunkAmount","offset","parseInt","SELECTORS","INPUTS","numLoaded","val","reloadMentors","BUTTONS","loadMoreButton","console","log","numToLoad","then","mentors","render","ismentorcardvertical","html","js","appendNodeContents","fail","Notification","exception"],"mappings":"0bAmD+BA,iBAEvBC,OAASC,UAAS,mBAAEC,UAAUC,OAAOC,WAAWC,OAASN,gCAC3DG,UAAUC,OAAOC,WAAWC,IAAIL,QAElCM,cAAcN,OAAQD,mMAjDbG,UAAY,CACvBK,QAAS,CACPC,eAAgB,qBAElBL,OAAQ,CACNC,UAAW,wBAUCE,cAAcN,OAAQD,aAElCU,QAAQC,IAAI,aAAcV,QAE1BS,QAAQC,IAAI,kBAAmBX,oDAGrB,CAAEK,UAAWJ,OAAQW,UAAWZ,cACzCa,MAAMC,6BACKC,OAAO,iCAAkC,CACjDD,QAASA,QAAQA,QACjBE,sBAAsB,IAErBH,MAAK,CAACI,KAAMC,yBAEDC,mBAAmB,eAAgBF,KAAMC,OAGpDE,KAAKC,sBAAaC,cAEtBF,KAAKC,sBAAaC,sDAiBH"}
>>>>>>> 861eea473c79dc900a141a8f6cf46dad1ce83095
