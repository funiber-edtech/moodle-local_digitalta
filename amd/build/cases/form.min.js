define("local_dta/cases/form",["exports","jquery","core/templates","core/notification","local_dta/repositories/cases_repository","local_dta/repositories/sections_repository","core/modal_factory","core/str","./listeners","local_dta/tiny/manage","local_dta/tags/autocomplete"],(function(_exports,_jquery,_templates,_notification,_cases_repository,_sections_repository,_modal_factory,_str,_listeners,_manage,_autocomplete){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}let sectionTextModal;Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.addTextSection=function(){_templates.default.render("local_dta/cases/manage/section-text-edit",{id:(new Date).getTime(),description:null,exist:!0}).then((html=>{(0,_jquery.default)("#sections-body").append(html),(0,_manage.createTinyMCE)((0,_jquery.default)(".card-body:has(textarea)").last().find("textarea").attr("id"))})).fail(_notification.default.exception)},_exports.changeSectionToEdit=changeSectionToEdit,_exports.changeStatusToComplete=async function(){const id=parseInt((0,_jquery.default)("#cases-id").val()),title=(0,_jquery.default)("#section-header-title").val(),description=(0,_jquery.default)("#section-header-description").val(),status=parseInt(1),tags=(0,_jquery.default)("#autocomplete_tags").val();(0,_cases_repository.caseEdit)({id:id,title:title,description:description,lang:"en",status:status,themes:[],tags:tags}).then((data=>{data.result&&(window.location.href=urlView+id)})).fail(_notification.default.exception)},_exports.deleteSection=function(){const sectionid=(0,_jquery.default)("#modal_delete_id").val();(0,_sections_repository.sectionDelete)({sectionid:sectionid}).then((data=>{data.result&&(sectionTextModal.hide(),sectionTextModal=null,(0,_jquery.default)(`#section_${sectionid}`).remove())})).fail(_notification.default.exception)},_exports.init=void 0,_exports.removeSection=function(sectionid){(0,_jquery.default)(`#not_exist_${sectionid}`).val()?sectionid&&(0,_jquery.default)(`#section_${sectionid}`).remove():changeSectionToEdit(!1,sectionid)},_exports.showDeleteSectionModal=async function(sectionid){sectionTextModal=await _modal_factory.default.create({title:(0,_str.get_string)("cases_section_text_delete_modal_title","local_dta"),body:_templates.default.render("local_dta/cases/manage/section-text-modal",{modalDeleteId:sectionid})}),sectionTextModal.show().then((()=>{(0,_jquery.default)("#modal_delete_id").val(sectionid)})).fail(_notification.default.exception)},_exports.showSaveCase=async function(){const saveModal=await _modal_factory.default.create({title:(0,_str.get_string)("cases_modal_save_title","local_dta"),body:_templates.default.render("local_dta/cases/manage/save-modal",{})});await saveModal.show()},_exports.upsertSection=function(id){const sectionid=(0,_jquery.default)(`#not_exist_${id}`).val()?null:(0,_jquery.default)(`#sectionid_${id}`).val(),componentinstance=(0,_jquery.default)("#cases-id").val(),content=(0,_jquery.default)(`#content_${id}`).val();return(0,_sections_repository.sectionUpsert)({sectionid:sectionid,sectiontype:"text",component:"case",componentinstance:componentinstance,group:"General",sequence:null,content:content}).then((data=>{if(data&&data.result)return function(id,toId){const description=(0,_jquery.default)(`#content_${id}`).val();_templates.default.render("local_dta/cases/manage/section-text-view",{id:toId,description:description,exist:!0}).then((html=>(0,_jquery.default)(`#section_${id}`).replaceWith(html))).fail(_notification.default.exception)}(id,data.sectionid),data;throw new Error("No se pudo realizar la actualización de la sección.")})).fail((()=>{throw new Error("Hubo un error al realizar la solicitud: ")}))},_jquery=_interopRequireDefault(_jquery),_templates=_interopRequireDefault(_templates),_notification=_interopRequireDefault(_notification),_modal_factory=_interopRequireDefault(_modal_factory),_listeners=_interopRequireDefault(_listeners);let urlView=null;function changeSectionToEdit(){let toView=arguments.length>0&&void 0!==arguments[0]&&arguments[0],id=arguments.length>1?arguments[1]:void 0;return new Promise(((resolve,reject)=>{const description=toView?(0,_jquery.default)(`#content_${id}`).html():(0,_jquery.default)(`#content_${id}`).val(),template=toView?"local_dta/cases/manage/section-text-edit":"local_dta/cases/manage/section-text-view";_templates.default.render(template,{id:id,description:description}).then((html=>((0,_jquery.default)(`#section_${id}`).replaceWith(html),resolve()))).fail((error=>{reject(error),_notification.default.exception(error)}))}))}_exports.init=async dataUrlView=>{(0,_listeners.default)(),(0,_autocomplete.autocompleteTags)("#autocomplete_tags"),urlView=dataUrlView,(0,_manage.createTinyMCE)("section-header-description")}}));

//# sourceMappingURL=form.min.js.map