{"version":3,"file":"form.min.js","sources":["../../src/cases/form.js"],"sourcesContent":["import $ from 'jquery';\r\nimport Templates from 'core/templates';\r\nimport Notification from 'core/notification';\r\nimport {\r\n    caseEdit\r\n} from 'local_dta/repositories/cases_repository';\r\nimport {\r\n    sectionUpsert,\r\n    sectionDelete\r\n} from 'local_dta/repositories/sections_repository';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport {get_string} from 'core/str';\r\nimport setEventListeners from './listeners';\r\nimport {createTinyMCE} from 'local_dta/tiny/manage';\r\nimport {autocompleteTags} from \"local_dta/tags/autocomplete\";\r\n\r\nlet sectionTextModal;\r\nlet urlView = null;\r\n\r\n/**\r\n * Add a new text section to the page.\r\n * @return {void}\r\n */\r\nexport function addTextSection() {\r\n    Templates.render('local_dta/cases/manage/section-text-edit', {\r\n        id: new Date().getTime(),\r\n        description: null,\r\n        exist: true\r\n    }).then((html) => {\r\n        $('#sections-body').append(html);\r\n        createTinyMCE($('.card-body:has(textarea)').last().find('textarea').attr('id'));\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Change the section to edit mode.\r\n * @param {boolean} toView - Whether to change to view mode.\r\n * @param {number} id - The id of the section to change.\r\n * @return {void}\r\n */\r\nexport function changeSectionToEdit(toView = false, id) {\r\n    return new Promise((resolve, reject) => {\r\n        const description = toView ? $(`#content_${id}`).html() : $(`#content_${id}`).val();\r\n        const template = toView ? 'local_dta/cases/manage/section-text-edit' : 'local_dta/cases/manage/section-text-view';\r\n        Templates.render(template, {id, description})\r\n            .then((html) => {\r\n                $(`#section_${id}`).replaceWith(html);\r\n                return resolve();\r\n            })\r\n            .fail((error) => {\r\n                reject(error);\r\n                Notification.exception(error);\r\n            });\r\n    });\r\n}\r\n\r\n/**\r\n * Change the section id to a new one.\r\n * @param {number} id - The id of the section to change.\r\n * @param {number} toId - The id of the section to change to.\r\n * @return {void}\r\n */\r\nfunction changeSectionToNewId(id, toId) {\r\n    const description = $(`#content_${id}`).val();\r\n    Templates.render(\"local_dta/cases/manage/section-text-view\",\r\n        {id: toId, description, exist: true}).then((html) => {\r\n           return $(`#section_${id}`).replaceWith(html);\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Set event listeners for the module.\r\n * @param {number} id - The id of the section to remove.\r\n * @return {void}\r\n *\r\n */\r\nexport function upsertSection(id) {\r\n    const sectionid = $(`#not_exist_${id}`).val() ? null : $(`#sectionid_${id}`).val();\r\n    const sectiontype = 'text';\r\n    const component = 'case';\r\n    const componentinstance = $('#cases-id').val();\r\n    const group = 'General';\r\n    const sequence = null;\r\n    const content = $(`#content_${id}`).val();\r\n\r\n    return sectionUpsert({sectionid, sectiontype, component, componentinstance, group, sequence, content})\r\n        .then((data) => {\r\n            if (data && data.result) {\r\n                changeSectionToNewId(id, data.sectionid);\r\n                return data;\r\n            } else {\r\n                throw new Error('No se pudo realizar la actualización de la sección.');\r\n            }\r\n        })\r\n        .fail(() => {\r\n            throw new Error('Hubo un error al realizar la solicitud: ');\r\n        });\r\n}\r\n\r\n/**\r\n * Remove a section from the page.\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nexport function removeSection(sectionid) {\r\n    if ($(`#not_exist_${sectionid}`).val()) {\r\n        if (sectionid) {\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n    } else {\r\n        changeSectionToEdit(false, sectionid);\r\n    }\r\n}\r\n\r\n/**\r\n * Show the delete section modal\r\n * @param {number} sectionid - The id of the section to remove.\r\n * @return {void}\r\n */\r\nexport async function showDeleteSectionModal(sectionid) {\r\n    sectionTextModal = await ModalFactory.create({\r\n        title: get_string(\"cases_section_text_delete_modal_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/manage/section-text-modal', {modalDeleteId: sectionid}),\r\n    });\r\n    sectionTextModal.show().then(() => {\r\n        $(\"#modal_delete_id\").val(sectionid);\r\n        return;\r\n    }).fail(Notification.exception);\r\n\r\n}\r\n\r\n/**\r\n * Show save case modal\r\n * @return {void}\r\n */\r\nexport async function showSaveCase() {\r\n    const saveModal = await ModalFactory.create({\r\n        title: get_string(\"cases_modal_save_title\", \"local_dta\"),\r\n        body: Templates.render('local_dta/cases/manage/save-modal', {})\r\n    });\r\n    await saveModal.show();\r\n}\r\n\r\n/**\r\n * Delete text section\r\n * @return {void}\r\n */\r\nexport function deleteSection() {\r\n    const sectionid = $(\"#modal_delete_id\").val();\r\n    sectionDelete({sectionid}).then((data) => {\r\n        if (data.result) {\r\n            sectionTextModal.hide();\r\n            sectionTextModal = null;\r\n            $(`#section_${sectionid}`).remove();\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Change the status of the case to complete.\r\n * @return {void}\r\n */\r\nexport async function changeStatusToComplete() {\r\n    const id = parseInt($('#cases-id').val());\r\n    const title = $('#section-header-title').val();\r\n    const description = $('#section-header-description').val();\r\n    const lang = 'en'; // @LANGUAGES TODO: Hardcoded\r\n    const status = parseInt(1);\r\n    const themes = []; // THEMES TODO: Implement\r\n    const tags = $(\"#autocomplete_tags\").val();\r\n    caseEdit({id, title, description, lang, status, themes, tags}).then((data) => {\r\n        if (data.result) {\r\n            window.location.href = urlView + id;\r\n        }\r\n        return;\r\n    }).fail(Notification.exception);\r\n}\r\n\r\n/**\r\n * Initialize the module.\r\n * @param {string} dataUrlView - The url to redirect after save the case.\r\n * @return {void}\r\n */\r\nexport const init = async(dataUrlView) => {\r\n    setEventListeners();\r\n    autocompleteTags(\"#autocomplete_tags\");\r\n    urlView = dataUrlView;\r\n    createTinyMCE('section-header-description');\r\n};"],"names":["sectionTextModal","render","id","Date","getTime","description","exist","then","html","append","last","find","attr","fail","Notification","exception","parseInt","val","title","status","tags","lang","themes","data","result","window","location","href","urlView","sectionid","hide","remove","changeSectionToEdit","ModalFactory","create","body","Templates","modalDeleteId","show","saveModal","componentinstance","content","sectiontype","component","group","sequence","toId","replaceWith","changeSectionToNewId","Error","toView","Promise","resolve","reject","template","error","async","dataUrlView"],"mappings":"0fAgBIA,+HAQUC,OAAO,2CAA4C,CACzDC,IAAI,IAAIC,MAAOC,UACfC,YAAa,KACbC,OAAO,IACRC,MAAMC,2BACH,kBAAkBC,OAAOD,iCACb,mBAAE,4BAA4BE,OAAOC,KAAK,YAAYC,KAAK,UAE1EC,KAAKC,sBAAaC,oHAqIfb,GAAKc,UAAS,mBAAE,aAAaC,OAC7BC,OAAQ,mBAAE,yBAAyBD,MACnCZ,aAAc,mBAAE,+BAA+BY,MAE/CE,OAASH,SAAS,GAElBI,MAAO,mBAAE,sBAAsBH,qCAC5B,CAACf,GAAAA,GAAIgB,MAAAA,MAAOb,YAAAA,YAAagB,KAJrB,KAI2BF,OAAAA,OAAQG,OAFjC,GAEyCF,KAAAA,OAAOb,MAAMgB,OAC7DA,KAAKC,SACLC,OAAOC,SAASC,KAAOC,QAAU1B,OAGtCW,KAAKC,sBAAaC,oDA5Bfc,WAAY,mBAAE,oBAAoBZ,6CAC1B,CAACY,UAAAA,YAAYtB,MAAMgB,OACzBA,KAAKC,SACLxB,iBAAiB8B,OACjB9B,iBAAmB,4CACL6B,YAAaE,aAGhClB,KAAKC,sBAAaC,iEApDKc,YACtB,wCAAgBA,YAAaZ,MACzBY,kDACcA,YAAaE,SAG/BC,qBAAoB,EAAOH,2DASUA,WACzC7B,uBAAyBiC,uBAAaC,OAAO,CACzChB,OAAO,mBAAW,wCAAyC,aAC3DiB,KAAMC,mBAAUnC,OAAO,4CAA6C,CAACoC,cAAeR,cAExF7B,iBAAiBsC,OAAO/B,MAAK,yBACvB,oBAAoBU,IAAIY,cAE3BhB,KAAKC,sBAAaC,yDASfwB,gBAAkBN,uBAAaC,OAAO,CACxChB,OAAO,mBAAW,yBAA0B,aAC5CiB,KAAMC,mBAAUnC,OAAO,oCAAqC,YAE1DsC,UAAUD,wCAhEUpC,UACpB2B,WAAY,wCAAgB3B,KAAMe,MAAQ,MAAO,wCAAgBf,KAAMe,MAGvEuB,mBAAoB,mBAAE,aAAavB,MAGnCwB,SAAU,sCAAcvC,KAAMe,aAE7B,sCAAc,CAACY,UAAAA,UAAWa,YAPb,OAO0BC,UAN5B,OAMuCH,kBAAAA,kBAAmBI,MAJ9D,UAIqEC,SAHlE,KAG4EJ,QAAAA,UACxFlC,MAAMgB,UACCA,MAAQA,KAAKC,uBAzBCtB,GAAI4C,YACxBzC,aAAc,sCAAcH,KAAMe,yBAC9BhB,OAAO,2CACb,CAACC,GAAI4C,KAAMzC,YAAAA,YAAaC,OAAO,IAAOC,MAAMC,OAClC,sCAAcN,KAAM6C,YAAYvC,QAC3CK,KAAKC,sBAAaC,WAqBTiC,CAAqB9C,GAAIqB,KAAKM,WACvBN,WAED,IAAI0B,MAAM,0DAGvBpC,MAAK,WACI,IAAIoC,MAAM,kSA/ExBrB,QAAU,cAwBEI,0BAAoBkB,+DAAgBhD,iDACzC,IAAIiD,SAAQ,CAACC,QAASC,gBACnBhD,YAAc6C,QAAS,sCAAchD,KAAMM,QAAS,sCAAcN,KAAMe,MACxEqC,SAAWJ,OAAS,2CAA6C,8DAC7DjD,OAAOqD,SAAU,CAACpD,GAAAA,GAAIG,YAAAA,cAC3BE,MAAMC,8CACWN,KAAM6C,YAAYvC,MACzB4C,aAEVvC,MAAM0C,QACHF,OAAOE,6BACMxC,UAAUwC,2BAqInBC,MAAAA,0EAEC,sBACjB5B,QAAU6B,sCACI"}