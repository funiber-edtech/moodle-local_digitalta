<div class="container-fluid">
  <input type="hidden" id="ourcases-id" value="{{ourcase.id}}">
  <div class="card">
    <div class="card-body">
      <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3 sidebar">
          <h4>{{#str}}experience, local_dta{{/str}}</h4>
          <hr />
          <h5>{{experience.title}}</h5>
          <p>{{{experience.description}}}</p>
        </div>
        <div class="col-md-9">
          <div class="row">
            <div class="col-md-12" id="sections-header">
              {{#sectionheader}} {{> local_dta/ourcases/section-header-view }} {{/sectionheader}}
            </div>
            <div class="col-md-12" id="sections-body">
              {{#sections}} {{> local_dta/ourcases/section-text-view}} {{/sections}}
            </div>
            <div class="col-md-12">{{>local_dta/ourcases/section-add }}</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="text-right pt-4">
    <button type="button" id="save-case-button" class="btn btn-primary">{{#str}}ourcases_button_save, local_dta{{/str}}</button>
  </div>
</div>
{{#js}}

function waitForElm(selector) {
    return new Promise(resolve => {
        if (document.querySelector(selector)) {
            return resolve(document.querySelector(selector));
        }

        const observer = new MutationObserver(mutations => {
            if (document.querySelector(selector)) {
                observer.disconnect();
                resolve(document.querySelector(selector));
            }
        });

        // If you get "parameter 1 is not of type 'Node'" error, see https://stackoverflow.com/a/77855838/492336
        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    });
}

function openTinyMCE(selector){
  waitForElm(selector).then(elm => {
    require(['jquery', 'editor_tiny/editor'], function($, editor) {
    const config = {
      "css": "http://localhost/theme/styles.php/dta/1710263914_1/editor",
      "context": 1,
      "plugins": {
        "anchor": {
          "buttons": [
            "anchor"
          ],
          "menuitems": {
            "anchor": "insert"
          }
        },
        "charmap": {
          "buttons": [
            "charmap"
          ],
          "menuitems": {
            "charmap": "insert"
          }
        },
        "code": {
          "buttons": [
            "code"
          ],
          "menuitems": {
            "code": "view"
          }
        },
        "codesample": {
          "buttons": [
            "codesample"
          ],
          "menutiems": {
            "codesample": "insert"
          }
        },
        "directionality": {
          "buttons": [
            "ltr",
            "rtl"
          ]
        },
        "emoticons": {
          "buttons": [
            "emoticons"
          ],
          "menuitems": {
            "emoticons": "insert"
          }
        },
        "fullscreen": {
          "buttons": [
            "fullscreen"
          ],
          "menuitems": {
            "fullscreen": "view"
          }
        },
        "help": {
          "buttons": [
            "help"
          ],
          "menuitems": {
            "help": "help"
          }
        },
        "insertdatetime": {
          "buttons": [
            "insertdatetime"
          ],
          "menuitems": {
            "insertdatetime": "insert"
          }
        },
        "lists": {
          "buttons": [
            "bullist",
            "numlist"
          ]
        },
        "nonbreaking": {
          "buttons": [
            "nonbreaking"
          ],
          "menuitems": {
            "nonbreaking": "insert"
          }
        },
        "pagebreak": {
          "buttons": [
            "pagebreak"
          ],
          "menuitems": {
            "pagebreak": "insert"
          }
        },
        "quickbars": {
          "buttons": [
            "quickimage",
            "quicklink",
            "quicktable"
          ]
        },
        "save": {
          "buttons": [
            "cancel",
            "save"
          ]
        },
        "searchreplace": {
          "buttons": [
            "searchreplace"
          ],
          "menuitems": {
            "searchreplace": "edit"
          }
        },
        "table": {
          "buttons": [
            "table",
            "tablecellprops",
            "tablecopyrow",
            "tablecutrow",
            "tabledelete",
            "tabledeletecol",
            "tabledeleterow",
            "tableinsertdialog",
            "tableinsertcolafter",
            "tableinsertcolbefore",
            "tableinsertrowafter",
            "tableinsertrowbefore",
            "tablemergecells",
            "tablepasterowafter",
            "tablepasterowbefore",
            "tableprops",
            "tablerowprops",
            "tablesplitcells",
            "tableclass",
            "tablecellclass",
            "tablecellvalign",
            "tablecellborderwidth",
            "tablecellborderstyle",
            "tablecaption",
            "tablecellbackgroundcolor",
            "tablecellbordercolor",
            "tablerowheader",
            "tablecolheader"
          ],
          "menuitems": {
            "inserttable": "table",
            "tableprops": "table",
            "deletetable": "table",
            "cell": "table",
            "tablemergecells": "table",
            "tablesplitcells": "table",
            "tablecellprops": "table",
            "column": "table",
            "tableinsertcolumnbefore": "table",
            "tableinsertcolumnafter": "table",
            "tablecutcolumn": "table",
            "tablecopycolumn": "table",
            "tablepastecolumnbefore": "table",
            "tablepastecolumnafter": "table",
            "tabledeletecolumn": "table",
            "row": "table",
            "tableinsertrowbefore": "table",
            "tableinsertrowafter": "table",
            "tablecutrow": "table",
            "tablecopyrow": "table",
            "tablepasterowbefore": "table",
            "tablepasterowafter": "table",
            "tablerowprops": "table",
            "tabledeleterow": "table"
          }
        },
        "visualblocks": {
          "buttons": [
            "visualblocks"
          ],
          "menuitems": {
            "visualblocks": "view"
          }
        },
        "visualchars": {
          "buttons": [
            "visualchars"
          ],
          "menuitems": {
            "visualchars": "view"
          }
        },
        "wordcount": {
          "buttons": [
            "wordcount"
          ],
          "menuitems": {
            "wordcount": "tools"
          }
        },
        "tiny_accessibilitychecker/plugin": {
          "buttons": [
            "tiny_accessibilitychecker/tiny_accessibilitychecker_image"
          ],
          "menuitems": [
            "tiny_accessibilitychecker/tiny_accessibilitychecker_image"
          ],
          "config": {
            "permissions": {
              "upload": true
            },
            "storeinrepo": true
          }
        },
        "tiny_autosave/plugin": {
          "config": {
            "autosave": null
          }
        },
        "tiny_equation/plugin": {
          "buttons": [
            "tiny_equation/equation"
          ],
          "menuitems": [
            "tiny_equation/equation"
          ],
          "config": {
            "texfilter": true,
            "contextid": 1,
            "libraries": [
              {
                "key": "group1",
                "groupname": "Operators",
                "elements": [
                  "\\cdot",
                  "\\times",
                  "\\ast",
                  "\\div",
                  "\\diamond",
                  "\\pm",
                  "\\mp",
                  "\\oplus",
                  "\\ominus",
                  "\\otimes",
                  "\\oslash",
                  "\\odot",
                  "\\circ",
                  "\\bullet",
                  "\\asymp",
                  "\\equiv",
                  "\\subseteq",
                  "\\supseteq",
                  "\\leq",
                  "\\geq",
                  "\\preceq",
                  "\\succeq",
                  "\\sim",
                  "\\simeq",
                  "\\approx",
                  "\\subset",
                  "\\supset",
                  "\\ll",
                  "\\gg",
                  "\\prec",
                  "\\succ",
                  "\\infty",
                  "\\in",
                  "\\ni",
                  "\\forall",
                  "\\exists",
                  "\\neq"
                ],
                "active": true
              },
              {
                "key": "group2",
                "groupname": "Arrows",
                "elements": [
                  "\\leftarrow",
                  "\\rightarrow",
                  "\\uparrow",
                  "\\downarrow",
                  "\\leftrightarrow",
                  "\\nearrow",
                  "\\searrow",
                  "\\swarrow",
                  "\\nwarrow",
                  "\\Leftarrow",
                  "\\Rightarrow",
                  "\\Uparrow",
                  "\\Downarrow",
                  "\\Leftrightarrow"
                ]
              },
              {
                "key": "group3",
                "groupname": "Greek symbols",
                "elements": [
                  "\\alpha",
                  "\\beta",
                  "\\gamma",
                  "\\delta",
                  "\\epsilon",
                  "\\zeta",
                  "\\eta",
                  "\\theta",
                  "\\iota",
                  "\\kappa",
                  "\\lambda",
                  "\\mu",
                  "\\nu",
                  "\\xi",
                  "\\pi",
                  "\\rho",
                  "\\sigma",
                  "\\tau",
                  "\\upsilon",
                  "\\phi",
                  "\\chi",
                  "\\psi",
                  "\\omega",
                  "\\Gamma",
                  "\\Delta",
                  "\\Theta",
                  "\\Lambda",
                  "\\Xi",
                  "\\Pi",
                  "\\Sigma",
                  "\\Upsilon",
                  "\\Phi",
                  "\\Psi",
                  "\\Omega"
                ]
              },
              {
                "key": "group4",
                "groupname": "Advanced",
                "elements": [
                  "\\sum{a,b}",
                  "\\sqrt[a]{b+c}",
                  "\\int_{a}^{b}{c}",
                  "\\iint_{a}^{b}{c}",
                  "\\iiint_{a}^{b}{c}",
                  "\\oint{a}",
                  "(a)",
                  "[a]",
                  "\\lbrace{a}\\rbrace",
                  "\\left| \\begin{matrix} a_1 & a_2 \\\\ a_3 & a_4 \\end{matrix} \\right|",
                  "\\frac{a}{b+c}",
                  "\\vec{a}",
                  "\\binom {a} {b}",
                  "{a \\brack b}",
                  "{a \\brace b}"
                ]
              }
            ],
            "texdocsurl": "https://docs.moodle.org/401/en/Using_TeX_Notation"
          }
        },
        "tiny_h5p/plugin": {
          "buttons": [
            "tiny_h5p/h5p"
          ],
          "menuitems": [
            "tiny_h5p/h5p"
          ],
          "config": {
            "permissions": {
              "embed": true,
              "upload": true,
              "uploadandembed": true
            },
            "storeinrepo": true
          }
        },
        "tiny_link/plugin": {
          "buttons": [
            "tiny_link/tiny_link_link",
            "tiny_link/tiny_link_unlink"
          ],
          "menuitems": [
            "tiny_link/tiny_link_link"
          ],
          "config": {
            "permissions": {
              "filepicker": true
            }
          }
        }
      }
    };
    editor.setupForTarget(elm, config);
  });
});
}
$(document).ready(function() {
  openTinyMCE('textarea#section-header-description');
  openTinyMCE('textarea#section-text-description');
});
{{/js}}
{{#js}}

{{/js}}
